	.file	"intrins.cpp"
	.section	.text._Z7can_tagl,"axG",@progbits,_Z7can_tagl,comdat
	.weak	_Z7can_tagl
	.type	_Z7can_tagl, @function
_Z7can_tagl:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movabsq	$4611686018427387904, %rax
	negq	%rax
	cmpq	-8(%rbp), %rax
	jg	.L2
	movabsq	$4611686018427387904, %rax
	subq	$1, %rax
	cmpq	-8(%rbp), %rax
	jl	.L2
	movl	$1, %eax
	jmp	.L3
.L2:
	movl	$0, %eax
.L3:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	_Z7can_tagl, .-_Z7can_tagl
	.text
	.type	_ZL20format_exc_check_argP7_objectPKcS0_, @function
_ZL20format_exc_check_argP7_objectPKcS0_:
.LFB3700:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.L9
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	call	PyUnicode_AsUTF8
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	je	.L10
	movq	-8(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L5
.L9:
	nop
	jmp	.L5
.L10:
	nop
.L5:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3700:
	.size	_ZL20format_exc_check_argP7_objectPKcS0_, .-_ZL20format_exc_check_argP7_objectPKcS0_
	.section	.rodata
	.align 8
.LC0:
	.string	"local variable '%.200s' referenced before assignment"
	.align 8
.LC1:
	.string	"free variable '%.200s' referenced before assignment in enclosing scope"
	.text
	.type	_ZL18format_exc_unboundP12PyCodeObjecti, @function
_ZL18format_exc_unboundP12PyCodeObjecti:
.LFB3701:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	call	PyErr_Occurred
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L15
	movl	-28(%rbp), %eax
	movslq	%eax, %rdx
	movq	-24(%rbp), %rax
	movq	80(%rax), %rax
	movq	16(%rax), %rax
	cmpq	%rax, %rdx
	jge	.L14
	movq	-24(%rbp), %rax
	movq	80(%rax), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rdx
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -8(%rbp)
	movq	PyExc_UnboundLocalError(%rip), %rax
	movq	-8(%rbp), %rdx
	movl	$.LC0, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
	jmp	.L11
.L14:
	movq	-24(%rbp), %rax
	movq	72(%rax), %rax
	movl	-28(%rbp), %edx
	movslq	%edx, %rcx
	movq	-24(%rbp), %rdx
	movq	80(%rdx), %rdx
	movq	16(%rdx), %rdx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -8(%rbp)
	movq	PyExc_NameError(%rip), %rax
	movq	-8(%rbp), %rdx
	movl	$.LC1, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
	jmp	.L11
.L15:
	nop
.L11:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3701:
	.size	_ZL18format_exc_unboundP12PyCodeObjecti, .-_ZL18format_exc_unboundP12PyCodeObjecti
	.globl	_Z9PyJit_AddP7_objectS0_
	.type	_Z9PyJit_AddP7_objectS0_, @function
_Z9PyJit_AddP7_objectS0_:
.LFB3702:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L17
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L17
	movq	-48(%rbp), %rdx
	leaq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyUnicode_Append
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	jmp	.L18
.L17:
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Add
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L18
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L18:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L19
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L19:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3702:
	.size	_Z9PyJit_AddP7_objectS0_, .-_Z9PyJit_AddP7_objectS0_
	.globl	_Z12PyJit_SubscrP7_objectS0_
	.type	_Z12PyJit_SubscrP7_objectS0_, @function
_Z12PyJit_SubscrP7_objectS0_:
.LFB3703:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L22
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L22:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L23
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L23:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3703:
	.size	_Z12PyJit_SubscrP7_objectS0_, .-_Z12PyJit_SubscrP7_objectS0_
	.globl	_Z17PyJit_RichCompareP7_objectS0_i
	.type	_Z17PyJit_RichCompareP7_objectS0_i, @function
_Z17PyJit_RichCompareP7_objectS0_i:
.LFB3704:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movl	%edx, -52(%rbp)
	movl	-52(%rbp), %edx
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_RichCompare
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L26
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L26:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L27
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L27:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3704:
	.size	_Z17PyJit_RichCompareP7_objectS0_i, .-_Z17PyJit_RichCompareP7_objectS0_i
	.globl	_Z20PyJit_RichEquals_StrP7_objectS0_PPv
	.type	_Z20PyJit_RichEquals_StrP7_objectS0_PPv, @function
_Z20PyJit_RichEquals_StrP7_objectS0_PPv:
.LFB3705:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L30
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L30
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyUnicode_Compare
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -20(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L31
	jmp	.L35
.L30:
	movq	-56(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z24PyJit_RichEquals_GenericP7_objectS0_PPv
	jmp	.L33
.L35:
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L31:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L34
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L34:
	movl	-20(%rbp), %eax
.L33:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3705:
	.size	_Z20PyJit_RichEquals_StrP7_objectS0_PPv, .-_Z20PyJit_RichEquals_StrP7_objectS0_PPv
	.type	_ZL12long_compareP11_longobjectS0_, @function
_ZL12long_compareP11_longobjectS0_:
.LFB3706:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	16(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	16(%rax), %rax
	cmpq	%rax, %rdx
	je	.L37
	movq	-24(%rbp), %rax
	movq	16(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	16(%rax), %rax
	subq	%rax, %rdx
	movq	%rdx, %rax
	movq	%rax, -16(%rbp)
	jmp	.L38
.L37:
	movq	-24(%rbp), %rax
	movq	16(%rax), %rdx
	movq	%rdx, %rax
	sarq	$63, %rax
	xorq	%rax, %rdx
	movq	%rdx, -8(%rbp)
	subq	%rax, -8(%rbp)
.L42:
	subq	$1, -8(%rbp)
	cmpq	$0, -8(%rbp)
	js	.L39
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$4, %rdx
	movl	8(%rax,%rdx,4), %edx
	movq	-32(%rbp), %rax
	movq	-8(%rbp), %rcx
	addq	$4, %rcx
	movl	8(%rax,%rcx,4), %eax
	cmpl	%eax, %edx
	jne	.L39
	movl	$1, %eax
	jmp	.L40
.L39:
	movl	$0, %eax
.L40:
	testb	%al, %al
	je	.L41
	jmp	.L42
.L41:
	cmpq	$0, -8(%rbp)
	jns	.L43
	movq	$0, -16(%rbp)
	jmp	.L38
.L43:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$4, %rdx
	movl	8(%rax,%rdx,4), %eax
	movl	%eax, %ecx
	movq	-32(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$4, %rdx
	movl	8(%rax,%rdx,4), %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	cltq
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	jns	.L38
	negq	-16(%rbp)
.L38:
	cmpq	$0, -16(%rbp)
	js	.L44
	cmpq	$0, -16(%rbp)
	jle	.L45
	movl	$1, %eax
	jmp	.L48
.L45:
	movl	$0, %eax
	jmp	.L48
.L44:
	movl	$-1, %eax
.L48:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3706:
	.size	_ZL12long_compareP11_longobjectS0_, .-_ZL12long_compareP11_longobjectS0_
	.globl	_Z21PyJit_RichEquals_LongP7_objectS0_PPv
	.type	_Z21PyJit_RichEquals_LongP7_objectS0_PPv, @function
_Z21PyJit_RichEquals_LongP7_objectS0_PPv:
.LFB3707:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyLong_Type, %rax
	jne	.L50
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyLong_Type, %rax
	jne	.L50
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -20(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L51
	jmp	.L55
.L50:
	movq	-56(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z24PyJit_RichEquals_GenericP7_objectS0_PPv
	jmp	.L53
.L55:
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L51:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L54
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L54:
	movl	-20(%rbp), %eax
.L53:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3707:
	.size	_Z21PyJit_RichEquals_LongP7_objectS0_PPv, .-_Z21PyJit_RichEquals_LongP7_objectS0_PPv
	.globl	_Z24PyJit_RichEquals_GenericP7_objectS0_PPv
	.type	_Z24PyJit_RichEquals_GenericP7_objectS0_PPv, @function
_Z24PyJit_RichEquals_GenericP7_objectS0_PPv:
.LFB3708:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movq	%rdx, -72(%rbp)
	movq	-56(%rbp), %rax
	movq	8(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	%rax, %rdx
	jne	.L57
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L58
	movq	-72(%rbp), %rax
	movq	$_Z20PyJit_RichEquals_StrP7_objectS0_PPv, (%rax)
	movq	-72(%rbp), %rdx
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z20PyJit_RichEquals_StrP7_objectS0_PPv
	jmp	.L59
.L58:
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyLong_Type, %rax
	jne	.L57
	movq	-72(%rbp), %rax
	movq	$_Z21PyJit_RichEquals_LongP7_objectS0_PPv, (%rax)
	movq	-72(%rbp), %rdx
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_RichEquals_LongP7_objectS0_PPv
	jmp	.L59
.L57:
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movl	$2, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_RichCompare
	movq	%rax, -32(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L60
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L60:
	movq	-64(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L61
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L61:
	cmpq	$0, -32(%rbp)
	jne	.L62
	movl	$-1, %eax
	jmp	.L59
.L62:
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	call	PyObject_IsTrue
	movl	%eax, -36(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L63
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L63:
	movl	-36(%rbp), %eax
.L59:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3708:
	.size	_Z24PyJit_RichEquals_GenericP7_objectS0_PPv, .-_Z24PyJit_RichEquals_GenericP7_objectS0_PPv
	.globl	_Z14PyJit_ContainsP7_objectS0_
	.type	_Z14PyJit_ContainsP7_objectS0_, @function
_Z14PyJit_ContainsP7_objectS0_:
.LFB3709:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PySequence_Contains
	movl	%eax, -28(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L65
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L65:
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L66
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L66:
	cmpl	$0, -28(%rbp)
	jns	.L67
	movl	$0, %eax
	jmp	.L68
.L67:
	cmpl	$0, -28(%rbp)
	je	.L69
	movl	$_Py_TrueStruct, %eax
	jmp	.L70
.L69:
	movl	$_Py_FalseStruct, %eax
.L70:
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
.L68:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3709:
	.size	_Z14PyJit_ContainsP7_objectS0_, .-_Z14PyJit_ContainsP7_objectS0_
	.globl	_Z17PyJit_NotContainsP7_objectS0_
	.type	_Z17PyJit_NotContainsP7_objectS0_, @function
_Z17PyJit_NotContainsP7_objectS0_:
.LFB3710:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PySequence_Contains
	movl	%eax, -28(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L72
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L72:
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L73
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L73:
	cmpl	$0, -28(%rbp)
	jns	.L74
	movl	$0, %eax
	jmp	.L75
.L74:
	cmpl	$0, -28(%rbp)
	je	.L76
	movl	$_Py_FalseStruct, %eax
	jmp	.L77
.L76:
	movl	$_Py_TrueStruct, %eax
.L77:
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
.L75:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3710:
	.size	_Z17PyJit_NotContainsP7_objectS0_, .-_Z17PyJit_NotContainsP7_objectS0_
	.globl	_Z18PyJit_Contains_IntP7_objectS0_
	.type	_Z18PyJit_Contains_IntP7_objectS0_, @function
_Z18PyJit_Contains_IntP7_objectS0_:
.LFB3711:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PySequence_Contains
	movl	%eax, -20(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L79
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L79:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L80
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L80:
	movl	-20(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3711:
	.size	_Z18PyJit_Contains_IntP7_objectS0_, .-_Z18PyJit_Contains_IntP7_objectS0_
	.globl	_Z21PyJit_NotContains_IntP7_objectS0_
	.type	_Z21PyJit_NotContains_IntP7_objectS0_, @function
_Z21PyJit_NotContains_IntP7_objectS0_:
.LFB3712:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PySequence_Contains
	movl	%eax, -20(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L83
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L83:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L84
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L84:
	cmpl	$0, -20(%rbp)
	jns	.L85
	movl	$-1, %eax
	jmp	.L86
.L85:
	cmpl	$0, -20(%rbp)
	sete	%al
	movzbl	%al, %eax
.L86:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3712:
	.size	_Z21PyJit_NotContains_IntP7_objectS0_, .-_Z21PyJit_NotContains_IntP7_objectS0_
	.globl	_Z13PyJit_CellGetP6_framem
	.type	_Z13PyJit_CellGetP6_framem, @function
_Z13PyJit_CellGetP6_framem:
.LFB3713:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	leaq	376(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	32(%rax), %rax
	movl	24(%rax), %eax
	cltq
	salq	$3, %rax
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rax
	leaq	0(,%rax,8), %rdx
	movq	-16(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	jne	.L88
	movq	-32(%rbp), %rax
	movl	%eax, %edx
	movq	-24(%rbp), %rax
	movq	32(%rax), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	_ZL18format_exc_unboundP12PyCodeObjecti
	jmp	.L89
.L88:
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
.L89:
	movq	-8(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3713:
	.size	_Z13PyJit_CellGetP6_framem, .-_Z13PyJit_CellGetP6_framem
	.globl	_Z17PyJit_NewFunctionP7_objectS0_P6_frame
	.type	_Z17PyJit_NewFunctionP7_objectS0_P6_frame, @function
_Z17PyJit_NewFunctionP7_objectS0_P6_frame:
.LFB3714:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	48(%rax), %rcx
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyFunction_NewWithQualName
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L92
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L92:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L93
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L93:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3714:
	.size	_Z17PyJit_NewFunctionP7_objectS0_P6_frame, .-_Z17PyJit_NewFunctionP7_objectS0_P6_frame
	.globl	_Z16PyJit_SetClosureP7_objectS0_
	.type	_Z16PyJit_SetClosureP7_objectS0_, @function
_Z16PyJit_SetClosureP7_objectS0_:
.LFB3715:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyFunction_SetClosure
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L96
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L96:
	movq	-32(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3715:
	.size	_Z16PyJit_SetClosureP7_objectS0_, .-_Z16PyJit_SetClosureP7_objectS0_
	.globl	_Z16PyJit_BuildSliceP7_objectS0_S0_
	.type	_Z16PyJit_BuildSliceP7_objectS0_S0_, @function
_Z16PyJit_BuildSliceP7_objectS0_S0_:
.LFB3716:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PySlice_New
	movq	%rax, -40(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L99
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L99:
	movq	-64(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L100
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L100:
	movq	-72(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L101
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L101
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L101:
	movq	-40(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3716:
	.size	_Z16PyJit_BuildSliceP7_objectS0_S0_, .-_Z16PyJit_BuildSliceP7_objectS0_S0_
	.globl	_Z19PyJit_UnaryPositiveP7_object
	.type	_Z19PyJit_UnaryPositiveP7_object, @function
_Z19PyJit_UnaryPositiveP7_object:
.LFB3717:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyNumber_Positive
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L105
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L105:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3717:
	.size	_Z19PyJit_UnaryPositiveP7_object, .-_Z19PyJit_UnaryPositiveP7_object
	.globl	_Z19PyJit_UnaryNegativeP7_object
	.type	_Z19PyJit_UnaryNegativeP7_object, @function
_Z19PyJit_UnaryNegativeP7_object:
.LFB3718:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyNumber_Negative
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L108
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L108:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3718:
	.size	_Z19PyJit_UnaryNegativeP7_object, .-_Z19PyJit_UnaryNegativeP7_object
	.globl	_Z14PyJit_UnaryNotP7_object
	.type	_Z14PyJit_UnaryNotP7_object, @function
_Z14PyJit_UnaryNotP7_object:
.LFB3719:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyObject_IsTrue
	movl	%eax, -12(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L111
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L111:
	cmpl	$0, -12(%rbp)
	jne	.L112
	movl	$_Py_TrueStruct, %eax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	movl	$_Py_TrueStruct, %eax
	jmp	.L113
.L112:
	cmpl	$0, -12(%rbp)
	jle	.L114
	movl	$_Py_FalseStruct, %eax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	movl	$_Py_FalseStruct, %eax
	jmp	.L113
.L114:
	movl	$0, %eax
.L113:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3719:
	.size	_Z14PyJit_UnaryNotP7_object, .-_Z14PyJit_UnaryNotP7_object
	.globl	_Z18PyJit_UnaryNot_IntP7_object
	.type	_Z18PyJit_UnaryNot_IntP7_object, @function
_Z18PyJit_UnaryNot_IntP7_object:
.LFB3720:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyObject_IsTrue
	movl	%eax, -12(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L116
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L116:
	cmpl	$0, -12(%rbp)
	jns	.L117
	movl	$-1, %eax
	jmp	.L118
.L117:
	cmpl	$0, -12(%rbp)
	sete	%al
	movzbl	%al, %eax
.L118:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3720:
	.size	_Z18PyJit_UnaryNot_IntP7_object, .-_Z18PyJit_UnaryNot_IntP7_object
	.globl	_Z17PyJit_UnaryInvertP7_object
	.type	_Z17PyJit_UnaryInvertP7_object, @function
_Z17PyJit_UnaryInvertP7_object:
.LFB3721:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyNumber_Invert
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L120
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L120:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3721:
	.size	_Z17PyJit_UnaryInvertP7_object, .-_Z17PyJit_UnaryInvertP7_object
	.globl	_Z16PyJit_ListAppendP7_objectS0_
	.type	_Z16PyJit_ListAppendP7_objectS0_, @function
_Z16PyJit_ListAppendP7_objectS0_:
.LFB3722:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyList_Append
	movl	%eax, -12(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L123
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L123:
	cmpl	$0, -12(%rbp)
	je	.L124
	movl	$0, %eax
	jmp	.L125
.L124:
	movq	-24(%rbp), %rax
.L125:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3722:
	.size	_Z16PyJit_ListAppendP7_objectS0_, .-_Z16PyJit_ListAppendP7_objectS0_
	.globl	_Z12PyJit_SetAddP7_objectS0_
	.type	_Z12PyJit_SetAddP7_objectS0_, @function
_Z12PyJit_SetAddP7_objectS0_:
.LFB3723:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PySet_Add
	movl	%eax, -12(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L127
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L127:
	cmpl	$0, -12(%rbp)
	je	.L128
	movl	$0, %eax
	jmp	.L129
.L128:
	movq	-24(%rbp), %rax
.L129:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3723:
	.size	_Z12PyJit_SetAddP7_objectS0_, .-_Z12PyJit_SetAddP7_objectS0_
	.section	.rodata
.LC2:
	.string	"intrins.cpp"
.LC3:
	.string	"PyAnySet_CheckExact(set)"
	.text
	.globl	_Z15PyJit_UpdateSetP7_objectS0_
	.type	_Z15PyJit_UpdateSetP7_objectS0_, @function
_Z15PyJit_UpdateSetP7_objectS0_:
.LFB3724:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PySet_Type, %rax
	je	.L131
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFrozenSet_Type, %rax
	je	.L131
	movl	$_ZZ15PyJit_UpdateSetP7_objectS0_E19__PRETTY_FUNCTION__, %ecx
	movl	$332, %edx
	movl	$.LC2, %esi
	movl	$.LC3, %edi
	call	__assert_fail
.L131:
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_PySet_Update
	movl	%eax, -12(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L132
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L132:
	movl	-12(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3724:
	.size	_Z15PyJit_UpdateSetP7_objectS0_, .-_Z15PyJit_UpdateSetP7_objectS0_
	.globl	_Z12PyJit_MapAddP7_objectS0_S0_
	.type	_Z12PyJit_MapAddP7_objectS0_S0_, @function
_Z12PyJit_MapAddP7_objectS0_S0_:
.LFB3725:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-48(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	movl	%eax, -20(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L135
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L135:
	movq	-56(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L136
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L136:
	cmpl	$0, -20(%rbp)
	je	.L137
	movl	$0, %eax
	jmp	.L138
.L137:
	movq	-40(%rbp), %rax
.L138:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3725:
	.size	_Z12PyJit_MapAddP7_objectS0_S0_, .-_Z12PyJit_MapAddP7_objectS0_S0_
	.globl	_Z14PyJit_MultiplyP7_objectS0_
	.type	_Z14PyJit_MultiplyP7_objectS0_, @function
_Z14PyJit_MultiplyP7_objectS0_:
.LFB3726:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Multiply
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L140
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L140:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L141
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L141:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3726:
	.size	_Z14PyJit_MultiplyP7_objectS0_, .-_Z14PyJit_MultiplyP7_objectS0_
	.globl	_Z16PyJit_TrueDivideP7_objectS0_
	.type	_Z16PyJit_TrueDivideP7_objectS0_, @function
_Z16PyJit_TrueDivideP7_objectS0_:
.LFB3727:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_TrueDivide
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L144
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L144:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L145
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L145:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3727:
	.size	_Z16PyJit_TrueDivideP7_objectS0_, .-_Z16PyJit_TrueDivideP7_objectS0_
	.globl	_Z17PyJit_FloorDivideP7_objectS0_
	.type	_Z17PyJit_FloorDivideP7_objectS0_, @function
_Z17PyJit_FloorDivideP7_objectS0_:
.LFB3728:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_FloorDivide
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L148
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L148:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L149
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L149:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3728:
	.size	_Z17PyJit_FloorDivideP7_objectS0_, .-_Z17PyJit_FloorDivideP7_objectS0_
	.globl	_Z11PyJit_PowerP7_objectS0_
	.type	_Z11PyJit_PowerP7_objectS0_, @function
_Z11PyJit_PowerP7_objectS0_:
.LFB3729:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movl	$_Py_NoneStruct, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Power
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L152
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L152:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L153
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L153:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3729:
	.size	_Z11PyJit_PowerP7_objectS0_, .-_Z11PyJit_PowerP7_objectS0_
	.globl	_Z12PyJit_ModuloP7_objectS0_
	.type	_Z12PyJit_ModuloP7_objectS0_, @function
_Z12PyJit_ModuloP7_objectS0_:
.LFB3730:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L156
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$268435456, %eax
	testq	%rax, %rax
	je	.L157
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L156
.L157:
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyUnicode_Format
	jmp	.L158
.L156:
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Remainder
.L158:
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L159
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L159:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L160
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L160:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3730:
	.size	_Z12PyJit_ModuloP7_objectS0_, .-_Z12PyJit_ModuloP7_objectS0_
	.globl	_Z14PyJit_SubtractP7_objectS0_
	.type	_Z14PyJit_SubtractP7_objectS0_, @function
_Z14PyJit_SubtractP7_objectS0_:
.LFB3731:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Subtract
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L163
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L163:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L164
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L164:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3731:
	.size	_Z14PyJit_SubtractP7_objectS0_, .-_Z14PyJit_SubtractP7_objectS0_
	.globl	_Z20PyJit_MatrixMultiplyP7_objectS0_
	.type	_Z20PyJit_MatrixMultiplyP7_objectS0_, @function
_Z20PyJit_MatrixMultiplyP7_objectS0_:
.LFB3732:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_MatrixMultiply
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L167
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L167:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L168
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L168:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3732:
	.size	_Z20PyJit_MatrixMultiplyP7_objectS0_, .-_Z20PyJit_MatrixMultiplyP7_objectS0_
	.globl	_Z18PyJit_BinaryLShiftP7_objectS0_
	.type	_Z18PyJit_BinaryLShiftP7_objectS0_, @function
_Z18PyJit_BinaryLShiftP7_objectS0_:
.LFB3733:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Lshift
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L171
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L171:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L172
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L172:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3733:
	.size	_Z18PyJit_BinaryLShiftP7_objectS0_, .-_Z18PyJit_BinaryLShiftP7_objectS0_
	.globl	_Z18PyJit_BinaryRShiftP7_objectS0_
	.type	_Z18PyJit_BinaryRShiftP7_objectS0_, @function
_Z18PyJit_BinaryRShiftP7_objectS0_:
.LFB3734:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Rshift
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L175
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L175:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L176
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L176:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3734:
	.size	_Z18PyJit_BinaryRShiftP7_objectS0_, .-_Z18PyJit_BinaryRShiftP7_objectS0_
	.globl	_Z15PyJit_BinaryAndP7_objectS0_
	.type	_Z15PyJit_BinaryAndP7_objectS0_, @function
_Z15PyJit_BinaryAndP7_objectS0_:
.LFB3735:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_And
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L179
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L179:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L180
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L180:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3735:
	.size	_Z15PyJit_BinaryAndP7_objectS0_, .-_Z15PyJit_BinaryAndP7_objectS0_
	.globl	_Z15PyJit_BinaryXorP7_objectS0_
	.type	_Z15PyJit_BinaryXorP7_objectS0_, @function
_Z15PyJit_BinaryXorP7_objectS0_:
.LFB3736:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Xor
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L183
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L183:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L184
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L184:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3736:
	.size	_Z15PyJit_BinaryXorP7_objectS0_, .-_Z15PyJit_BinaryXorP7_objectS0_
	.globl	_Z14PyJit_BinaryOrP7_objectS0_
	.type	_Z14PyJit_BinaryOrP7_objectS0_, @function
_Z14PyJit_BinaryOrP7_objectS0_:
.LFB3737:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Or
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L187
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L187:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L188
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L188:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3737:
	.size	_Z14PyJit_BinaryOrP7_objectS0_, .-_Z14PyJit_BinaryOrP7_objectS0_
	.globl	_Z18PyJit_InplacePowerP7_objectS0_
	.type	_Z18PyJit_InplacePowerP7_objectS0_, @function
_Z18PyJit_InplacePowerP7_objectS0_:
.LFB3738:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movl	$_Py_NoneStruct, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlacePower
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L191
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L191:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L192
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L192:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3738:
	.size	_Z18PyJit_InplacePowerP7_objectS0_, .-_Z18PyJit_InplacePowerP7_objectS0_
	.globl	_Z21PyJit_InplaceMultiplyP7_objectS0_
	.type	_Z21PyJit_InplaceMultiplyP7_objectS0_, @function
_Z21PyJit_InplaceMultiplyP7_objectS0_:
.LFB3739:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceMultiply
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L195
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L195:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L196
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L196:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3739:
	.size	_Z21PyJit_InplaceMultiplyP7_objectS0_, .-_Z21PyJit_InplaceMultiplyP7_objectS0_
	.globl	_Z27PyJit_InplaceMatrixMultiplyP7_objectS0_
	.type	_Z27PyJit_InplaceMatrixMultiplyP7_objectS0_, @function
_Z27PyJit_InplaceMatrixMultiplyP7_objectS0_:
.LFB3740:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceMatrixMultiply
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L199
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L199:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L200
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L200:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3740:
	.size	_Z27PyJit_InplaceMatrixMultiplyP7_objectS0_, .-_Z27PyJit_InplaceMatrixMultiplyP7_objectS0_
	.globl	_Z23PyJit_InplaceTrueDivideP7_objectS0_
	.type	_Z23PyJit_InplaceTrueDivideP7_objectS0_, @function
_Z23PyJit_InplaceTrueDivideP7_objectS0_:
.LFB3741:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceTrueDivide
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L203
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L203:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L204
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L204:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3741:
	.size	_Z23PyJit_InplaceTrueDivideP7_objectS0_, .-_Z23PyJit_InplaceTrueDivideP7_objectS0_
	.globl	_Z24PyJit_InplaceFloorDivideP7_objectS0_
	.type	_Z24PyJit_InplaceFloorDivideP7_objectS0_, @function
_Z24PyJit_InplaceFloorDivideP7_objectS0_:
.LFB3742:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceFloorDivide
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L207
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L207:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L208
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L208:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3742:
	.size	_Z24PyJit_InplaceFloorDivideP7_objectS0_, .-_Z24PyJit_InplaceFloorDivideP7_objectS0_
	.globl	_Z19PyJit_InplaceModuloP7_objectS0_
	.type	_Z19PyJit_InplaceModuloP7_objectS0_, @function
_Z19PyJit_InplaceModuloP7_objectS0_:
.LFB3743:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceRemainder
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L211
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L211:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L212
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L212:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3743:
	.size	_Z19PyJit_InplaceModuloP7_objectS0_, .-_Z19PyJit_InplaceModuloP7_objectS0_
	.globl	_Z16PyJit_InplaceAddP7_objectS0_
	.type	_Z16PyJit_InplaceAddP7_objectS0_, @function
_Z16PyJit_InplaceAddP7_objectS0_:
.LFB3744:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L215
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L215
	movq	-48(%rbp), %rdx
	leaq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyUnicode_Append
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	jmp	.L216
.L215:
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceAdd
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L216
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L216:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L217
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L217:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3744:
	.size	_Z16PyJit_InplaceAddP7_objectS0_, .-_Z16PyJit_InplaceAddP7_objectS0_
	.globl	_Z21PyJit_InplaceSubtractP7_objectS0_
	.type	_Z21PyJit_InplaceSubtractP7_objectS0_, @function
_Z21PyJit_InplaceSubtractP7_objectS0_:
.LFB3745:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceSubtract
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L220
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L220:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L221
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L221:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3745:
	.size	_Z21PyJit_InplaceSubtractP7_objectS0_, .-_Z21PyJit_InplaceSubtractP7_objectS0_
	.globl	_Z19PyJit_InplaceLShiftP7_objectS0_
	.type	_Z19PyJit_InplaceLShiftP7_objectS0_, @function
_Z19PyJit_InplaceLShiftP7_objectS0_:
.LFB3746:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceLshift
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L224
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L224:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L225
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L225:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3746:
	.size	_Z19PyJit_InplaceLShiftP7_objectS0_, .-_Z19PyJit_InplaceLShiftP7_objectS0_
	.globl	_Z19PyJit_InplaceRShiftP7_objectS0_
	.type	_Z19PyJit_InplaceRShiftP7_objectS0_, @function
_Z19PyJit_InplaceRShiftP7_objectS0_:
.LFB3747:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceRshift
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L228
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L228:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L229
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L229:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3747:
	.size	_Z19PyJit_InplaceRShiftP7_objectS0_, .-_Z19PyJit_InplaceRShiftP7_objectS0_
	.globl	_Z16PyJit_InplaceAndP7_objectS0_
	.type	_Z16PyJit_InplaceAndP7_objectS0_, @function
_Z16PyJit_InplaceAndP7_objectS0_:
.LFB3748:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceAnd
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L232
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L232:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L233
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L233:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3748:
	.size	_Z16PyJit_InplaceAndP7_objectS0_, .-_Z16PyJit_InplaceAndP7_objectS0_
	.globl	_Z16PyJit_InplaceXorP7_objectS0_
	.type	_Z16PyJit_InplaceXorP7_objectS0_, @function
_Z16PyJit_InplaceXorP7_objectS0_:
.LFB3749:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceXor
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L236
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L236:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L237
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L237:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3749:
	.size	_Z16PyJit_InplaceXorP7_objectS0_, .-_Z16PyJit_InplaceXorP7_objectS0_
	.globl	_Z15PyJit_InplaceOrP7_objectS0_
	.type	_Z15PyJit_InplaceOrP7_objectS0_, @function
_Z15PyJit_InplaceOrP7_objectS0_:
.LFB3750:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_InPlaceOr
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L240
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L240:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L241
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L241:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3750:
	.size	_Z15PyJit_InplaceOrP7_objectS0_, .-_Z15PyJit_InplaceOrP7_objectS0_
	.section	.rodata
.LC4:
	.string	"lost sys.displayhook"
	.text
	.globl	_Z15PyJit_PrintExprP7_object
	.type	_Z15PyJit_PrintExprP7_object, @function
_Z15PyJit_PrintExprP7_object:
.LFB3751:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movl	$_ZZ15PyJit_PrintExprP7_objectE16PyId_displayhook, %edi
	call	_PySys_GetObjectId
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jne	.L244
	movq	PyExc_RuntimeError(%rip), %rax
	movl	$.LC4, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movq	-56(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L245
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L245:
	movl	$1, %eax
	jmp	.L246
.L244:
	movq	-56(%rbp), %rcx
	movq	-40(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyObject_CallFunctionObjArgs
	movq	%rax, -24(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L247
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L247:
	cmpq	$0, -24(%rbp)
	jne	.L248
	movl	$1, %eax
	jmp	.L246
.L248:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L249
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L249:
	movl	$0, %eax
.L246:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3751:
	.size	_Z15PyJit_PrintExprP7_object, .-_Z15PyJit_PrintExprP7_object
	.section	.rodata
	.align 8
.LC5:
	.string	"PyExceptionInstance_Check(*val)"
	.text
	.globl	_Z22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_
	.type	_Z22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_, @function
_Z22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_:
.LFB3752:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	%r8, -56(%rbp)
	movq	%r9, -64(%rbp)
	call	PyThreadState_Get
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	104(%rax), %rax
	testq	%rax, %rax
	je	.L251
	movq	-8(%rbp), %rax
	movq	104(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L252
.L251:
	movq	-48(%rbp), %rax
	movq	$_Py_NoneStruct, (%rax)
	movq	_Py_NoneStruct(%rip), %rax
	addq	$1, %rax
	movq	%rax, _Py_NoneStruct(%rip)
.L252:
	movq	-8(%rbp), %rax
	movq	112(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	120(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyErr_Fetch
	movq	-40(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyErr_NormalizeException
	cmpq	$0, -40(%rbp)
	je	.L253
	movq	-40(%rbp), %rax
	movq	(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyException_SetTraceback
	jmp	.L254
.L253:
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movl	$_Py_NoneStruct, %esi
	movq	%rax, %rdi
	call	PyException_SetTraceback
.L254:
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 104(%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 112(%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L255
	movl	$_ZZ22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_E19__PRETTY_FUNCTION__, %ecx
	movl	$583, %edx
	movl	$.LC2, %esi
	movl	$.LC5, %edi
	call	__assert_fail
.L255:
	movq	-40(%rbp), %rax
	movq	(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, 120(%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.L256
	movq	-40(%rbp), %rax
	movq	$_Py_NoneStruct, (%rax)
.L256:
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3752:
	.size	_Z22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_, .-_Z22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_
	.section	.rodata
	.align 8
.LC6:
	.string	"val == nullptr || PyExceptionInstance_Check(val)"
	.text
	.globl	_Z14PyJit_UnwindEhP7_objectS0_S0_
	.type	_Z14PyJit_UnwindEhP7_objectS0_S0_, @function
_Z14PyJit_UnwindEhP7_objectS0_S0_:
.LFB3753:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -88(%rbp)
	movq	%rsi, -96(%rbp)
	movq	%rdx, -104(%rbp)
	call	PyThreadState_Get
	movq	%rax, -80(%rbp)
	cmpq	$0, -96(%rbp)
	je	.L258
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L258
	movl	$_ZZ14PyJit_UnwindEhP7_objectS0_S0_E19__PRETTY_FUNCTION__, %ecx
	movl	$592, %edx
	movl	$.LC2, %esi
	movl	$.LC6, %edi
	call	__assert_fail
.L258:
	movq	-80(%rbp), %rax
	movq	120(%rax), %rax
	movq	%rax, -72(%rbp)
	movq	-80(%rbp), %rax
	movq	104(%rax), %rax
	movq	%rax, -64(%rbp)
	movq	-80(%rbp), %rax
	movq	112(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-80(%rbp), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, 120(%rax)
	movq	-80(%rbp), %rax
	movq	-88(%rbp), %rdx
	movq	%rdx, 104(%rax)
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rdx
	movq	%rdx, 112(%rax)
	movq	-72(%rbp), %rax
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	.L259
	movq	-48(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L259
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L259:
	movq	-64(%rbp), %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.L261
	movq	-32(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L261
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L261:
	movq	-56(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L265
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L265
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L265:
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3753:
	.size	_Z14PyJit_UnwindEhP7_objectS0_S0_, .-_Z14PyJit_UnwindEhP7_objectS0_S0_
	.section	.rodata
	.align 8
.LC7:
	.string	"catching classes that do not inherit from BaseException is not allowed"
	.text
	.globl	_Z23PyJit_CompareExceptionsP7_objectS0_
	.type	_Z23PyJit_CompareExceptionsP7_objectS0_, @function
_Z23PyJit_CompareExceptionsP7_objectS0_:
.LFB3754:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movq	%rdi, -88(%rbp)
	movq	%rsi, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$67108864, %eax
	testq	%rax, %rax
	je	.L267
	movq	-96(%rbp), %rax
	movq	%rax, %rdi
	call	PyTuple_Size
	movq	%rax, -64(%rbp)
	movq	$0, -72(%rbp)
.L274:
	movq	-72(%rbp), %rax
	cmpq	-64(%rbp), %rax
	jge	.L275
	movq	-96(%rbp), %rax
	movq	-72(%rbp), %rdx
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$2147483648, %eax
	testq	%rax, %rax
	je	.L269
	movq	-56(%rbp), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L270
.L269:
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC7, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movq	-88(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L271
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L271:
	movq	-96(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L272
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L272:
	movl	$0, %eax
	jmp	.L273
.L270:
	addq	$1, -72(%rbp)
	jmp	.L274
.L267:
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$2147483648, %eax
	testq	%rax, %rax
	je	.L276
	movq	-96(%rbp), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L275
.L276:
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC7, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movq	-88(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L277
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L277:
	movq	-96(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L278
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L278:
	movl	$0, %eax
	jmp	.L273
.L275:
	movq	-96(%rbp), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyErr_GivenExceptionMatches
	movl	%eax, -76(%rbp)
	movq	-88(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L279
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L279:
	movq	-96(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L280
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L280:
	cmpl	$0, -76(%rbp)
	je	.L281
	movl	$_Py_TrueStruct, %eax
	jmp	.L282
.L281:
	movl	$_Py_FalseStruct, %eax
.L282:
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-88(%rbp), %rax
.L273:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3754:
	.size	_Z23PyJit_CompareExceptionsP7_objectS0_, .-_Z23PyJit_CompareExceptionsP7_objectS0_
	.globl	_Z27PyJit_CompareExceptions_IntP7_objectS0_
	.type	_Z27PyJit_CompareExceptions_IntP7_objectS0_, @function
_Z27PyJit_CompareExceptions_IntP7_objectS0_:
.LFB3755:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movq	%rdi, -88(%rbp)
	movq	%rsi, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$67108864, %eax
	testq	%rax, %rax
	je	.L284
	movq	-96(%rbp), %rax
	movq	%rax, %rdi
	call	PyTuple_Size
	movq	%rax, -64(%rbp)
	movq	$0, -72(%rbp)
.L291:
	movq	-72(%rbp), %rax
	cmpq	-64(%rbp), %rax
	jge	.L292
	movq	-96(%rbp), %rax
	movq	-72(%rbp), %rdx
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$2147483648, %eax
	testq	%rax, %rax
	je	.L286
	movq	-56(%rbp), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L287
.L286:
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC7, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movq	-88(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L288
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L288:
	movq	-96(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L289
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L289:
	movl	$-1, %eax
	jmp	.L290
.L287:
	addq	$1, -72(%rbp)
	jmp	.L291
.L284:
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$2147483648, %eax
	testq	%rax, %rax
	je	.L293
	movq	-96(%rbp), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L292
.L293:
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC7, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movq	-88(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L294
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L294:
	movq	-96(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L295
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L295:
	movl	$-1, %eax
	jmp	.L290
.L292:
	movq	-96(%rbp), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyErr_GivenExceptionMatches
	movl	%eax, -76(%rbp)
	movq	-88(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L296
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L296:
	movq	-96(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L297
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L297:
	cmpl	$0, -76(%rbp)
	je	.L298
	movl	$1, %eax
	jmp	.L290
.L298:
	movl	$0, %eax
.L290:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3755:
	.size	_Z27PyJit_CompareExceptions_IntP7_objectS0_, .-_Z27PyJit_CompareExceptions_IntP7_objectS0_
	.globl	_Z18PyJit_UnboundLocalP7_object
	.type	_Z18PyJit_UnboundLocalP7_object, @function
_Z18PyJit_UnboundLocalP7_object:
.LFB3756:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	PyExc_UnboundLocalError(%rip), %rax
	movq	-8(%rbp), %rdx
	movl	$.LC0, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3756:
	.size	_Z18PyJit_UnboundLocalP7_object, .-_Z18PyJit_UnboundLocalP7_object
	.globl	_Z16PyJit_DebugTracePc
	.type	_Z16PyJit_DebugTracePc, @function
_Z16PyJit_DebugTracePc:
.LFB3757:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	puts
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3757:
	.size	_Z16PyJit_DebugTracePc, .-_Z16PyJit_DebugTracePc
	.globl	_Z18PyJit_PyErrRestoreP7_objectS0_S0_
	.type	_Z18PyJit_PyErrRestoreP7_objectS0_S0_, @function
_Z18PyJit_PyErrRestoreP7_objectS0_S0_:
.LFB3758:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$_Py_NoneStruct, -24(%rbp)
	jne	.L303
	movq	$0, -24(%rbp)
.L303:
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyErr_Restore
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3758:
	.size	_Z18PyJit_PyErrRestoreP7_objectS0_S0_, .-_Z18PyJit_PyErrRestoreP7_objectS0_S0_
	.section	.rodata
.LC8:
	.string	"__import__ not found"
	.text
	.globl	_Z16PyJit_ImportNameP7_objectS0_S0_P6_frame
	.type	_Z16PyJit_ImportNameP7_objectS0_S0_P6_frame, @function
_Z16PyJit_ImportNameP7_objectS0_S0_P6_frame:
.LFB3759:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movq	%rdi, -72(%rbp)
	movq	%rsi, -80(%rbp)
	movq	%rdx, -88(%rbp)
	movq	%rcx, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	40(%rax), %rax
	movl	$_ZZ16PyJit_ImportNameP7_objectS0_S0_P6_frameE15PyId___import__, %esi
	movq	%rax, %rdi
	call	_PyDict_GetItemId
	movq	%rax, -56(%rbp)
	cmpq	$0, -56(%rbp)
	jne	.L305
	movq	PyExc_ImportError(%rip), %rax
	movl	$.LC8, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L306
.L305:
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	%rax, %rdi
	call	PyLong_AsLong
	cmpq	$-1, %rax
	jne	.L307
	call	PyErr_Occurred
	testq	%rax, %rax
	je	.L308
.L307:
	movl	$1, %eax
	jmp	.L309
.L308:
	movl	$0, %eax
.L309:
	testb	%al, %al
	je	.L310
	movq	-96(%rbp), %rax
	movq	56(%rax), %rax
	testq	%rax, %rax
	je	.L311
	movq	-96(%rbp), %rax
	movq	56(%rax), %rax
	jmp	.L312
.L311:
	movl	$_Py_NoneStruct, %eax
.L312:
	movq	-96(%rbp), %rdx
	movq	48(%rdx), %rdx
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rcx
	movq	-88(%rbp), %rsi
	movq	%rdi, %r9
	movq	%rcx, %r8
	movq	%rax, %rcx
	movl	$5, %edi
	movl	$0, %eax
	call	PyTuple_Pack
	movq	%rax, -64(%rbp)
	jmp	.L313
.L310:
	movq	-96(%rbp), %rax
	movq	56(%rax), %rax
	testq	%rax, %rax
	je	.L314
	movq	-96(%rbp), %rax
	movq	56(%rax), %rax
	jmp	.L315
.L314:
	movl	$_Py_NoneStruct, %eax
.L315:
	movq	-96(%rbp), %rdx
	movq	48(%rdx), %rdx
	movq	-80(%rbp), %rcx
	movq	-88(%rbp), %rsi
	movq	%rcx, %r8
	movq	%rax, %rcx
	movl	$4, %edi
	movl	$0, %eax
	call	PyTuple_Pack
	movq	%rax, -64(%rbp)
.L313:
	movq	-72(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L316
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L316:
	movq	-80(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L317
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L317:
	cmpq	$0, -64(%rbp)
	jne	.L318
	movq	-56(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L319
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L319:
	movl	$0, %eax
	jmp	.L306
.L318:
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyEval_CallObjectWithKeywords
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L320
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L320:
	movq	-56(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L321
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L321:
	movq	-24(%rbp), %rax
.L306:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3759:
	.size	_Z16PyJit_ImportNameP7_objectS0_S0_P6_frame, .-_Z16PyJit_ImportNameP7_objectS0_S0_P6_frame
	.section	.rodata
.LC9:
	.string	"%U.%U"
.LC10:
	.string	"cannot import name %R"
	.text
	.globl	_Z16PyJit_ImportFromP7_objectS0_
	.type	_Z16PyJit_ImportFromP7_objectS0_, @function
_Z16PyJit_ImportFromP7_objectS0_:
.LFB3760:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movq	-64(%rbp), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetAttr
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jne	.L323
	movq	PyExc_AttributeError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	jne	.L324
.L323:
	movl	$1, %eax
	jmp	.L325
.L324:
	movl	$0, %eax
.L325:
	testb	%al, %al
	je	.L326
	movq	-40(%rbp), %rax
	jmp	.L327
.L326:
	call	PyErr_Clear
	movq	-56(%rbp), %rax
	movl	$_ZZ16PyJit_ImportFromP7_objectS0_E13PyId___name__, %esi
	movq	%rax, %rdi
	call	_PyObject_GetAttrId
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L328
	movl	$0, %eax
	jmp	.L327
.L328:
	movq	-64(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC9, %edi
	movl	$0, %eax
	call	PyUnicode_FromFormat
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L329
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L329:
	cmpq	$0, -24(%rbp)
	jne	.L330
	movl	$0, %eax
	jmp	.L327
.L330:
	call	PyImport_GetModuleDict
	movq	%rax, %rdx
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	PyDict_GetItem
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jne	.L331
	movq	PyExc_ImportError(%rip), %rax
	movq	-64(%rbp), %rdx
	movl	$.LC10, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L332
.L331:
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
.L332:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L333
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L333:
	movq	-40(%rbp), %rax
.L327:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3760:
	.size	_Z16PyJit_ImportFromP7_objectS0_, .-_Z16PyJit_ImportFromP7_objectS0_
	.section	.rodata
	.align 8
.LC11:
	.string	"from-import-* object has no __dict__ and no __all__"
	.text
	.type	_ZL15import_all_fromP7_objectS0_, @function
_ZL15import_all_fromP7_objectS0_:
.LFB3761:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$112, %rsp
	movq	%rdi, -104(%rbp)
	movq	%rsi, -112(%rbp)
	movq	-112(%rbp), %rax
	movl	$_ZZL15import_all_fromP7_objectS0_E12PyId___all__, %esi
	movq	%rax, %rdi
	call	_PyObject_GetAttrId
	movq	%rax, -80(%rbp)
	movl	$0, -92(%rbp)
	cmpq	$0, -80(%rbp)
	jne	.L335
	movq	PyExc_AttributeError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L336
	movl	$-1, %eax
	jmp	.L337
.L336:
	call	PyErr_Clear
	movq	-112(%rbp), %rax
	movl	$_ZZL15import_all_fromP7_objectS0_E13PyId___dict__, %esi
	movq	%rax, %rdi
	call	_PyObject_GetAttrId
	movq	%rax, -72(%rbp)
	cmpq	$0, -72(%rbp)
	jne	.L338
	movq	PyExc_AttributeError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L339
	movl	$-1, %eax
	jmp	.L337
.L339:
	movq	PyExc_ImportError(%rip), %rax
	movl	$.LC11, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$-1, %eax
	jmp	.L337
.L338:
	movq	-72(%rbp), %rax
	movq	%rax, %rdi
	call	PyMapping_Keys
	movq	%rax, -80(%rbp)
	movq	-72(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L340
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L340:
	cmpq	$0, -80(%rbp)
	jne	.L341
	movl	$-1, %eax
	jmp	.L337
.L341:
	movl	$1, -92(%rbp)
.L335:
	movl	$0, -88(%rbp)
	movl	$0, -84(%rbp)
.L373:
	movl	-88(%rbp), %eax
	movslq	%eax, %rdx
	movq	-80(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PySequence_GetItem
	movq	%rax, -56(%rbp)
	cmpq	$0, -56(%rbp)
	jne	.L342
	movq	PyExc_IndexError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L343
	movl	$-1, -84(%rbp)
	jmp	.L345
.L343:
	call	PyErr_Clear
	jmp	.L345
.L342:
	cmpl	$0, -92(%rbp)
	je	.L346
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$268435456, %eax
	testq	%rax, %rax
	je	.L346
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L347
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	call	_PyUnicode_Ready
	cmpl	$-1, %eax
	je	.L346
.L347:
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$28, %eax
	cmpb	$4, %al
	jne	.L348
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L349
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L350
	movq	-56(%rbp), %rax
	addq	$48, %rax
	jmp	.L352
.L350:
	movq	-56(%rbp), %rax
	addq	$72, %rax
	jmp	.L352
.L349:
	movq	-56(%rbp), %rax
	movq	72(%rax), %rax
.L352:
	movzbl	(%rax), %eax
	cmpb	$95, %al
	je	.L353
	jmp	.L346
.L348:
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$28, %eax
	cmpb	$8, %al
	jne	.L354
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L355
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L356
	movq	-56(%rbp), %rax
	addq	$48, %rax
	jmp	.L358
.L356:
	movq	-56(%rbp), %rax
	addq	$72, %rax
	jmp	.L358
.L355:
	movq	-56(%rbp), %rax
	movq	72(%rax), %rax
.L358:
	movzwl	(%rax), %eax
	cmpw	$95, %ax
	je	.L353
	jmp	.L346
.L354:
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L359
	movq	-56(%rbp), %rax
	movzbl	32(%rax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L360
	movq	-56(%rbp), %rax
	addq	$48, %rax
	jmp	.L362
.L360:
	movq	-56(%rbp), %rax
	addq	$72, %rax
	jmp	.L362
.L359:
	movq	-56(%rbp), %rax
	movq	72(%rax), %rax
.L362:
	movl	(%rax), %eax
	cmpl	$95, %eax
	jne	.L346
.L353:
	movl	$1, %eax
	jmp	.L363
.L346:
	movl	$0, %eax
.L363:
	testb	%al, %al
	je	.L364
	movq	-56(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L375
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L375
.L364:
	movq	-56(%rbp), %rdx
	movq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetAttr
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jne	.L367
	movl	$-1, -84(%rbp)
	jmp	.L368
.L367:
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L369
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-104(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	movl	%eax, -84(%rbp)
	jmp	.L368
.L369:
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-104(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_SetItem
	movl	%eax, -84(%rbp)
.L368:
	movq	-56(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L370
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L370:
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.L371
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L371
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L371:
	cmpl	$0, -84(%rbp)
	jne	.L376
	jmp	.L366
.L375:
	nop
.L366:
	addl	$1, -88(%rbp)
	jmp	.L373
.L376:
	nop
.L345:
	movq	-80(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L374
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L374:
	movl	-84(%rbp), %eax
.L337:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3761:
	.size	_ZL15import_all_fromP7_objectS0_, .-_ZL15import_all_fromP7_objectS0_
	.section	.rodata
	.align 8
.LC12:
	.string	"no locals found during 'import *'"
	.text
	.globl	_Z16PyJit_ImportStarP7_objectP6_frame
	.type	_Z16PyJit_ImportStarP7_objectP6_frame, @function
_Z16PyJit_ImportStarP7_objectP6_frame:
.LFB3762:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	PyFrame_FastToLocalsWithError
	shrl	$31, %eax
	testb	%al, %al
	je	.L378
	movl	$1, %eax
	jmp	.L379
.L378:
	movq	-48(%rbp), %rax
	movq	56(%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.L380
	movq	PyExc_SystemError(%rip), %rax
	movl	$.LC12, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$1, %eax
	jmp	.L379
.L380:
	movq	-40(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL15import_all_fromP7_objectS0_
	movl	%eax, -20(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	call	PyFrame_LocalsToFast
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L381
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L381:
	movl	-20(%rbp), %eax
.L379:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3762:
	.size	_Z16PyJit_ImportStarP7_objectP6_frame, .-_Z16PyJit_ImportStarP7_objectP6_frame
	.section	.rodata
	.align 8
.LC13:
	.string	"%.200s%.200s argument after ** must be a mapping, not %.200s"
	.align 8
.LC14:
	.string	"%.200s%.200s argument after * must be an iterable, not %.200s"
	.text
	.globl	_Z16PyJit_CallKwArgsP7_objectS0_S0_
	.type	_Z16PyJit_CallKwArgsP7_objectS0_S0_, @function
_Z16PyJit_CallKwArgsP7_objectS0_S0_:
.LFB3763:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$112, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -104(%rbp)
	movq	%rsi, -112(%rbp)
	movq	%rdx, -120(%rbp)
	movq	$0, -88(%rbp)
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	je	.L383
	call	PyDict_New
	movq	%rax, -80(%rbp)
	cmpq	$0, -80(%rbp)
	je	.L400
	movq	-120(%rbp), %rdx
	movq	-80(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_Update
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L386
	movq	-80(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L387
	movq	-72(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L387:
	movq	PyExc_AttributeError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L401
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rbx
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_GetFuncDesc
	movq	%rax, %r12
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_GetFuncName
	movq	%rax, %rdx
	movq	PyExc_TypeError(%rip), %rax
	movq	%rbx, %r8
	movq	%r12, %rcx
	movl	$.LC13, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L401
.L386:
	movq	-120(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L389
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L389:
	movq	-80(%rbp), %rax
	movq	%rax, -120(%rbp)
.L383:
	movq	-112(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyTuple_Type, %rax
	je	.L390
	movq	-112(%rbp), %rax
	movq	8(%rax), %rax
	movq	216(%rax), %rax
	testq	%rax, %rax
	jne	.L391
	movq	-112(%rbp), %rax
	movq	%rax, %rdi
	call	PySequence_Check
	testl	%eax, %eax
	jne	.L391
	movl	$1, %eax
	jmp	.L392
.L391:
	movl	$0, %eax
.L392:
	testb	%al, %al
	je	.L393
	movq	-112(%rbp), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rbx
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_GetFuncDesc
	movq	%rax, %r12
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_GetFuncName
	movq	%rax, %rdx
	movq	PyExc_TypeError(%rip), %rax
	movq	%rbx, %r8
	movq	%r12, %rcx
	movl	$.LC14, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L385
.L393:
	movq	-112(%rbp), %rax
	movq	%rax, %rdi
	call	PySequence_Tuple
	movq	%rax, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	.L402
	movq	-112(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L395
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L395:
	movq	-56(%rbp), %rax
	movq	%rax, -112(%rbp)
.L390:
	movq	-120(%rbp), %rdx
	movq	-112(%rbp), %rcx
	movq	-104(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -88(%rbp)
	jmp	.L385
.L400:
	nop
	jmp	.L385
.L401:
	nop
	jmp	.L385
.L402:
	nop
.L385:
	movq	-104(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L396
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L396:
	movq	-112(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L397
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L397:
	movq	-120(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L398
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L398:
	movq	-88(%rbp), %rax
	addq	$112, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3763:
	.size	_Z16PyJit_CallKwArgsP7_objectS0_S0_, .-_Z16PyJit_CallKwArgsP7_objectS0_S0_
	.globl	_Z14PyJit_CallArgsP7_objectS0_
	.type	_Z14PyJit_CallArgsP7_objectS0_, @function
_Z14PyJit_CallArgsP7_objectS0_:
.LFB3764:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%r12
	pushq	%rbx
	subq	$64, %rsp
	.cfi_offset 12, -24
	.cfi_offset 3, -32
	movq	%rdi, -72(%rbp)
	movq	%rsi, -80(%rbp)
	movq	$0, -56(%rbp)
	movq	-80(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyTuple_Type, %rax
	je	.L404
	movq	-80(%rbp), %rax
	movq	8(%rax), %rax
	movq	216(%rax), %rax
	testq	%rax, %rax
	jne	.L405
	movq	-80(%rbp), %rax
	movq	%rax, %rdi
	call	PySequence_Check
	testl	%eax, %eax
	jne	.L405
	movl	$1, %eax
	jmp	.L406
.L405:
	movl	$0, %eax
.L406:
	testb	%al, %al
	je	.L407
	movq	-80(%rbp), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rbx
	movq	-72(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_GetFuncDesc
	movq	%rax, %r12
	movq	-72(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_GetFuncName
	movq	%rax, %rdx
	movq	PyExc_TypeError(%rip), %rax
	movq	%rbx, %r8
	movq	%r12, %rcx
	movl	$.LC14, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L408
.L407:
	movq	-80(%rbp), %rax
	movq	%rax, %rdi
	call	PySequence_Tuple
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	.L414
	movq	-80(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L410
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L410:
	movq	-48(%rbp), %rax
	movq	%rax, -80(%rbp)
.L404:
	movq	-80(%rbp), %rcx
	movq	-72(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -56(%rbp)
	jmp	.L408
.L414:
	nop
.L408:
	movq	-72(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L411
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L411:
	movq	-80(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L412
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L412:
	movq	-56(%rbp), %rax
	addq	$64, %rsp
	popq	%rbx
	popq	%r12
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3764:
	.size	_Z14PyJit_CallArgsP7_objectS0_, .-_Z14PyJit_CallArgsP7_objectS0_
	.section	.rodata
.LC15:
	.string	"Arg %d %s\r\n"
.LC16:
	.string	"Null local type?"
.LC17:
	.string	"Null local?"
	.text
	.globl	_Z20PyJit_DebugDumpFrameP6_frame
	.type	_Z20PyJit_DebugDumpFrameP6_frame, @function
_Z20PyJit_DebugDumpFrameP6_frame:
.LFB3765:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movzbl	_ZZ20PyJit_DebugDumpFrameP6_frameE8_dumping(%rip), %eax
	testb	%al, %al
	jne	.L424
	movb	$1, _ZZ20PyJit_DebugDumpFrameP6_frameE8_dumping(%rip)
	movq	-24(%rbp), %rax
	movq	32(%rax), %rax
	movl	16(%rax), %eax
	movl	%eax, -12(%rbp)
	movl	$0, -16(%rbp)
.L423:
	movl	-16(%rbp), %eax
	cmpl	-12(%rbp), %eax
	jge	.L418
	movq	-24(%rbp), %rax
	movl	-16(%rbp), %edx
	movslq	%edx, %rdx
	addq	$46, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	je	.L419
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.L420
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rdx
	movl	-16(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC15, %edi
	movl	$0, %eax
	call	printf
	jmp	.L422
.L420:
	movl	$.LC16, %edi
	movl	$0, %eax
	call	printf
	jmp	.L422
.L419:
	movl	$.LC17, %edi
	movl	$0, %eax
	call	printf
.L422:
	addl	$1, -16(%rbp)
	jmp	.L423
.L418:
	movb	$0, _ZZ20PyJit_DebugDumpFrameP6_frameE8_dumping(%rip)
	jmp	.L415
.L424:
	nop
.L415:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3765:
	.size	_Z20PyJit_DebugDumpFrameP6_frame, .-_Z20PyJit_DebugDumpFrameP6_frame
	.globl	_Z15PyJit_PushFrameP6_frame
	.type	_Z15PyJit_PushFrameP6_frame, @function
_Z15PyJit_PushFrameP6_frame:
.LFB3766:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	call	PyThreadState_Get
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rax, 24(%rdx)
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3766:
	.size	_Z15PyJit_PushFrameP6_frame, .-_Z15PyJit_PushFrameP6_frame
	.globl	_Z14PyJit_PopFrameP6_frame
	.type	_Z14PyJit_PopFrameP6_frame, @function
_Z14PyJit_PopFrameP6_frame:
.LFB3767:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	call	PyThreadState_Get
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, 24(%rdx)
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3767:
	.size	_Z14PyJit_PopFrameP6_frame, .-_Z14PyJit_PopFrameP6_frame
	.globl	_Z13PyJit_EhTraceP6_frame
	.type	_Z13PyJit_EhTraceP6_frame, @function
_Z13PyJit_EhTraceP6_frame:
.LFB3768:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	PyTraceBack_Here
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3768:
	.size	_Z13PyJit_EhTraceP6_frame, .-_Z13PyJit_EhTraceP6_frame
	.section	.rodata
	.align 8
.LC18:
	.string	"No active exception to reraise"
	.align 8
.LC19:
	.string	"calling %R should have returned an instance of BaseException, not %R"
	.align 8
.LC20:
	.string	"exceptions must derive from BaseException"
	.align 8
.LC21:
	.string	"exception causes must derive from BaseException"
	.text
	.globl	_Z11PyJit_RaiseP7_objectS0_
	.type	_Z11PyJit_RaiseP7_objectS0_, @function
_Z11PyJit_RaiseP7_objectS0_:
.LFB3769:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$192, %rsp
	movq	%rdi, -184(%rbp)
	movq	%rsi, -192(%rbp)
	movq	$0, -168(%rbp)
	movq	$0, -160(%rbp)
	cmpq	$0, -184(%rbp)
	jne	.L429
	call	PyThreadState_Get
	movq	%rax, -144(%rbp)
	movq	-144(%rbp), %rax
	movq	104(%rax), %rax
	movq	%rax, -168(%rbp)
	movq	-144(%rbp), %rax
	movq	112(%rax), %rax
	movq	%rax, -160(%rbp)
	movq	-144(%rbp), %rax
	movq	120(%rax), %rax
	movq	%rax, -136(%rbp)
	cmpq	$_Py_NoneStruct, -168(%rbp)
	je	.L430
	cmpq	$0, -168(%rbp)
	jne	.L431
.L430:
	movq	PyExc_RuntimeError(%rip), %rax
	movl	$.LC18, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L432
.L431:
	movq	-168(%rbp), %rax
	movq	%rax, -128(%rbp)
	cmpq	$0, -128(%rbp)
	je	.L433
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
.L433:
	movq	-160(%rbp), %rax
	movq	%rax, -120(%rbp)
	cmpq	$0, -120(%rbp)
	je	.L434
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
.L434:
	movq	-136(%rbp), %rax
	movq	%rax, -112(%rbp)
	cmpq	$0, -112(%rbp)
	je	.L435
	movq	-112(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-112(%rbp), %rax
	movq	%rdx, (%rax)
.L435:
	movq	-136(%rbp), %rdx
	movq	-160(%rbp), %rcx
	movq	-168(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyErr_Restore
	movl	$1, %eax
	jmp	.L432
.L429:
	movq	-184(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$2147483648, %eax
	testq	%rax, %rax
	je	.L436
	movq	-184(%rbp), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	je	.L436
	movq	-184(%rbp), %rax
	movq	%rax, -168(%rbp)
	movq	-184(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	call	PyObject_CallObject
	movq	%rax, -160(%rbp)
	cmpq	$0, -160(%rbp)
	je	.L461
	movq	-160(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	jne	.L440
	movq	-160(%rbp), %rax
	movq	8(%rax), %rcx
	movq	PyExc_TypeError(%rip), %rax
	movq	-168(%rbp), %rdx
	movl	$.LC19, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L438
.L436:
	movq	-184(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	je	.L441
	movq	-184(%rbp), %rax
	movq	%rax, -160(%rbp)
	movq	-184(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -168(%rbp)
	movq	-168(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-168(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L440
.L441:
	movq	-184(%rbp), %rax
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-104(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L442
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L442:
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC20, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	jmp	.L438
.L440:
	cmpq	$0, -192(%rbp)
	je	.L443
	movq	-192(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$2147483648, %eax
	testq	%rax, %rax
	je	.L444
	movq	-192(%rbp), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	je	.L444
	movq	-192(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	call	PyObject_CallObject
	movq	%rax, -152(%rbp)
	cmpq	$0, -152(%rbp)
	je	.L462
	movq	-192(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-96(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L463
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-96(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L463
.L444:
	movq	-192(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$1073741824, %eax
	testq	%rax, %rax
	je	.L448
	movq	-192(%rbp), %rax
	movq	%rax, -152(%rbp)
	jmp	.L447
.L448:
	cmpq	$_Py_NoneStruct, -192(%rbp)
	jne	.L449
	movq	-192(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L450
	movq	-88(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-88(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L450:
	movq	$0, -152(%rbp)
	jmp	.L447
.L449:
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC21, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	jmp	.L438
.L463:
	nop
.L447:
	movq	-152(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyException_SetCause
.L443:
	movq	-160(%rbp), %rdx
	movq	-168(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyErr_SetObject
	movq	-160(%rbp), %rax
	movq	%rax, -80(%rbp)
	cmpq	$0, -80(%rbp)
	je	.L451
	movq	-80(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L451
	movq	-72(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L451:
	movq	-168(%rbp), %rax
	movq	%rax, -64(%rbp)
	cmpq	$0, -64(%rbp)
	je	.L453
	movq	-64(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L453
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L453:
	movl	$0, %eax
	jmp	.L432
.L461:
	nop
	jmp	.L438
.L462:
	nop
.L438:
	movq	-160(%rbp), %rax
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	.L455
	movq	-48(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L455
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L455:
	movq	-168(%rbp), %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.L457
	movq	-32(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L457
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L457:
	movq	-192(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L459
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L459
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L459:
	movl	$0, %eax
.L432:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3769:
	.size	_Z11PyJit_RaiseP7_objectS0_, .-_Z11PyJit_RaiseP7_objectS0_
	.section	.rodata
	.align 8
.LC22:
	.string	"idx >= 0 && idx < ((size_t)PyTuple_GET_SIZE(co->co_freevars))"
	.text
	.globl	_Z20PyJit_LoadClassDerefP6_framem
	.type	_Z20PyJit_LoadClassDerefP6_framem, @function
_Z20PyJit_LoadClassDerefP6_framem:
.LFB3770:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -72(%rbp)
	movq	%rsi, -80(%rbp)
	movq	-72(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	80(%rax), %rax
	movq	16(%rax), %rax
	movq	%rax, %rdx
	movq	-80(%rbp), %rax
	subq	%rdx, %rax
	movq	%rax, -48(%rbp)
	movq	-56(%rbp), %rax
	movq	72(%rax), %rax
	movq	16(%rax), %rax
	cmpq	-48(%rbp), %rax
	ja	.L465
	movl	$_ZZ20PyJit_LoadClassDerefP6_framemE19__PRETTY_FUNCTION__, %ecx
	movl	$1101, %edx
	movl	$.LC2, %esi
	movl	$.LC22, %edi
	call	__assert_fail
.L465:
	movq	-56(%rbp), %rax
	movq	72(%rax), %rax
	movq	-48(%rbp), %rdx
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -40(%rbp)
	movq	-72(%rbp), %rax
	movq	56(%rax), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L466
	movq	-40(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_GetItem
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.L468
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L468
.L466:
	movq	-40(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -64(%rbp)
	cmpq	$0, -64(%rbp)
	jne	.L469
	call	PyErr_Occurred
	testq	%rax, %rax
	je	.L469
	movl	$1, %eax
	jmp	.L470
.L469:
	movl	$0, %eax
.L470:
	testb	%al, %al
	je	.L468
	movq	PyExc_KeyError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L471
	movl	$0, %eax
	jmp	.L472
.L471:
	call	PyErr_Clear
.L468:
	cmpq	$0, -64(%rbp)
	jne	.L473
	movq	-72(%rbp), %rax
	leaq	376(%rax), %rdx
	movq	-56(%rbp), %rax
	movl	24(%rax), %eax
	cltq
	salq	$3, %rax
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	movq	-80(%rbp), %rax
	leaq	0(,%rax,8), %rdx
	movq	-16(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -64(%rbp)
	cmpq	$0, -64(%rbp)
	jne	.L474
	movq	-80(%rbp), %rax
	movl	%eax, %edx
	movq	-56(%rbp), %rax
	movl	%edx, %esi
	movq	%rax, %rdi
	call	_ZL18format_exc_unboundP12PyCodeObjecti
	movl	$0, %eax
	jmp	.L472
.L474:
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
.L473:
	movq	-64(%rbp), %rax
.L472:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3770:
	.size	_Z20PyJit_LoadClassDerefP6_framem, .-_Z20PyJit_LoadClassDerefP6_framem
	.section	.rodata
.LC23:
	.string	"PyList_CheckExact(list)"
	.text
	.globl	_Z16PyJit_ExtendListP7_objectS0_
	.type	_Z16PyJit_ExtendListP7_objectS0_, @function
_Z16PyJit_ExtendListP7_objectS0_:
.LFB3771:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyList_Type, %rax
	je	.L476
	movl	$_ZZ16PyJit_ExtendListP7_objectS0_E19__PRETTY_FUNCTION__, %ecx
	movl	$1132, %edx
	movl	$.LC2, %esi
	movl	$.LC23, %edi
	call	__assert_fail
.L476:
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_PyList_Extend
	movq	%rax, -24(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L477
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L477:
	movl	$1, -28(%rbp)
	cmpq	$_Py_NoneStruct, -24(%rbp)
	jne	.L478
	movl	$0, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L478
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L478:
	movl	-28(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3771:
	.size	_Z16PyJit_ExtendListP7_objectS0_, .-_Z16PyJit_ExtendListP7_objectS0_
	.globl	_Z17PyJit_ListToTupleP7_object
	.type	_Z17PyJit_ListToTupleP7_object, @function
_Z17PyJit_ListToTupleP7_object:
.LFB3772:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyList_AsTuple
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L482
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L482:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3772:
	.size	_Z17PyJit_ListToTupleP7_object, .-_Z17PyJit_ListToTupleP7_object
	.section	.rodata
.LC24:
	.string	"PyDict_CheckExact(map)"
	.text
	.globl	_Z14PyJit_StoreMapP7_objectS0_S0_
	.type	_Z14PyJit_StoreMapP7_objectS0_S0_, @function
_Z14PyJit_StoreMapP7_objectS0_S0_:
.LFB3773:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	je	.L485
	movl	$_ZZ14PyJit_StoreMapP7_objectS0_S0_E19__PRETTY_FUNCTION__, %ecx
	movl	$1151, %edx
	movl	$.LC2, %esi
	movl	$.LC24, %edi
	call	__assert_fail
.L485:
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rcx
	movq	-56(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	movl	%eax, -20(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L486
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L486:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L487
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L487:
	movl	-20(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3773:
	.size	_Z14PyJit_StoreMapP7_objectS0_S0_, .-_Z14PyJit_StoreMapP7_objectS0_S0_
	.globl	_Z22PyJit_StoreMapNoDecRefP7_objectS0_S0_
	.type	_Z22PyJit_StoreMapNoDecRefP7_objectS0_S0_, @function
_Z22PyJit_StoreMapNoDecRefP7_objectS0_S0_:
.LFB3774:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	je	.L490
	movl	$_ZZ22PyJit_StoreMapNoDecRefP7_objectS0_S0_E19__PRETTY_FUNCTION__, %ecx
	movl	$1159, %edx
	movl	$.LC2, %esi
	movl	$.LC24, %edi
	call	__assert_fail
.L490:
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rcx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3774:
	.size	_Z22PyJit_StoreMapNoDecRefP7_objectS0_S0_, .-_Z22PyJit_StoreMapNoDecRefP7_objectS0_S0_
	.section	.rodata
.LC25:
	.string	"PyDict_CheckExact(dict)"
	.align 8
.LC26:
	.string	"'%.200s' object is not a mapping"
	.text
	.globl	_Z16PyJit_DictUpdateP7_objectS0_
	.type	_Z16PyJit_DictUpdateP7_objectS0_, @function
_Z16PyJit_DictUpdateP7_objectS0_:
.LFB3775:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	je	.L493
	movl	$_ZZ16PyJit_DictUpdateP7_objectS0_E19__PRETTY_FUNCTION__, %ecx
	movl	$1165, %edx
	movl	$.LC2, %esi
	movl	$.LC25, %edi
	call	__assert_fail
.L493:
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_Update
	movl	%eax, -12(%rbp)
	cmpl	$0, -12(%rbp)
	jns	.L494
	movq	PyExc_AttributeError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L494
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rdx
	movq	PyExc_TypeError(%rip), %rax
	movl	$.LC26, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
.L494:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L495
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L495:
	movl	-12(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3775:
	.size	_Z16PyJit_DictUpdateP7_objectS0_, .-_Z16PyJit_DictUpdateP7_objectS0_
	.globl	_Z17PyJit_StoreSubscrP7_objectS0_S0_
	.type	_Z17PyJit_StoreSubscrP7_objectS0_S0_, @function
_Z17PyJit_StoreSubscrP7_objectS0_S0_:
.LFB3776:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-48(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_SetItem
	movl	%eax, -28(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L498
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L498:
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L499
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L499:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L500
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L500:
	movl	-28(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3776:
	.size	_Z17PyJit_StoreSubscrP7_objectS0_S0_, .-_Z17PyJit_StoreSubscrP7_objectS0_S0_
	.globl	_Z18PyJit_DeleteSubscrP7_objectS0_
	.type	_Z18PyJit_DeleteSubscrP7_objectS0_, @function
_Z18PyJit_DeleteSubscrP7_objectS0_:
.LFB3777:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_DelItem
	movl	%eax, -20(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L503
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L503:
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L504
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L504:
	movl	-20(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3777:
	.size	_Z18PyJit_DeleteSubscrP7_objectS0_, .-_Z18PyJit_DeleteSubscrP7_objectS0_
	.globl	_Z11PyJit_CallNP7_objectS0_
	.type	_Z11PyJit_CallNP7_objectS0_, @function
_Z11PyJit_CallNP7_objectS0_:
.LFB3778:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L507
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L507:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L508
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L508:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3778:
	.size	_Z11PyJit_CallNP7_objectS0_, .-_Z11PyJit_CallNP7_objectS0_
	.globl	_Z13PyJit_CallNKWP7_objectS0_S0_
	.type	_Z13PyJit_CallNKWP7_objectS0_S0_, @function
_Z13PyJit_CallNKWP7_objectS0_S0_:
.LFB3779:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L511
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L511:
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L512
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L512:
	movq	-56(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L513
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L513:
	movq	-32(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3779:
	.size	_Z13PyJit_CallNKWP7_objectS0_S0_, .-_Z13PyJit_CallNKWP7_objectS0_S0_
	.globl	_Z17PyJit_StoreGlobalP7_objectP6_frameS0_
	.type	_Z17PyJit_StoreGlobalP7_objectP6_frameS0_, @function
_Z17PyJit_StoreGlobalP7_objectP6_frameS0_:
.LFB3780:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	movl	%eax, -12(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L516
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L516:
	movl	-12(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3780:
	.size	_Z17PyJit_StoreGlobalP7_objectP6_frameS0_, .-_Z17PyJit_StoreGlobalP7_objectP6_frameS0_
	.globl	_Z18PyJit_DeleteGlobalP6_frameP7_object
	.type	_Z18PyJit_DeleteGlobalP6_frameP7_object, @function
_Z18PyJit_DeleteGlobalP6_frameP7_object:
.LFB3781:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_DelItem
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3781:
	.size	_Z18PyJit_DeleteGlobalP6_frameP7_object, .-_Z18PyJit_DeleteGlobalP6_frameP7_object
	.globl	_PyDict_LoadGlobal
	.type	_PyDict_LoadGlobal, @function
_PyDict_LoadGlobal:
.LFB3782:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_GetItem
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	je	.L521
	movq	-8(%rbp), %rax
	jmp	.L522
.L521:
	movq	-40(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_GetItem
.L522:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3782:
	.size	_PyDict_LoadGlobal, .-_PyDict_LoadGlobal
	.section	.rodata
.LC27:
	.string	"name '%.200s' is not defined"
	.text
	.globl	_Z16PyJit_LoadGlobalP6_frameP7_object
	.type	_Z16PyJit_LoadGlobalP6_frameP7_object, @function
_Z16PyJit_LoadGlobalP6_frameP7_object:
.LFB3783:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	48(%rax), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L524
	movq	-24(%rbp), %rax
	movq	40(%rax), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L524
	movq	-24(%rbp), %rax
	movq	40(%rax), %rcx
	movq	-24(%rbp), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_PyDict_LoadGlobal
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.L525
	call	PyThreadState_Get
	movq	80(%rax), %rax
	testq	%rax, %rax
	sete	%al
	testb	%al, %al
	je	.L526
	movq	PyExc_NameError(%rip), %rax
	movq	-32(%rbp), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
.L526:
	movl	$0, %eax
	jmp	.L527
.L525:
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L528
.L524:
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	call	PyUnicode_AsUTF8
	movq	%rax, -8(%rbp)
	movq	-24(%rbp), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.L528
	movq	-24(%rbp), %rax
	movq	40(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.L529
	movq	PyExc_KeyError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L530
	movq	PyExc_NameError(%rip), %rax
	movq	-32(%rbp), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
.L530:
	movl	$0, %eax
	jmp	.L527
.L529:
	call	PyErr_Clear
.L528:
	movq	-16(%rbp), %rax
.L527:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3783:
	.size	_Z16PyJit_LoadGlobalP6_frameP7_object, .-_Z16PyJit_LoadGlobalP6_frameP7_object
	.globl	_Z13PyJit_GetIterP7_object
	.type	_Z13PyJit_GetIterP7_object, @function
_Z13PyJit_GetIterP7_object:
.LFB3784:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyObject_GetIter
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L532
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L532:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3784:
	.size	_Z13PyJit_GetIterP7_object, .-_Z13PyJit_GetIterP7_object
	.globl	_Z22PyJit_GetIterOptimizedP7_objectPmS1_
	.type	_Z22PyJit_GetIterOptimizedP7_objectPmS1_, @function
_Z22PyJit_GetIterOptimizedP7_objectPmS1_:
.LFB3785:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyObject_GetIter
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L535
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L535:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3785:
	.size	_Z22PyJit_GetIterOptimizedP7_objectPmS1_, .-_Z22PyJit_GetIterOptimizedP7_objectPmS1_
	.globl	_Z14PyJit_IterNextP7_objectPi
	.type	_Z14PyJit_IterNextP7_objectPi, @function
_Z14PyJit_IterNextP7_objectPi:
.LFB3786:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	224(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	jne	.L538
	call	PyErr_Occurred
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	je	.L538
	movq	PyExc_StopIteration(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L539
	movq	-32(%rbp), %rax
	movl	$1, (%rax)
	movl	$0, %eax
	jmp	.L540
.L539:
	movq	-32(%rbp), %rax
	movl	$0, (%rax)
	call	PyErr_Clear
.L538:
	movq	-8(%rbp), %rax
.L540:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3786:
	.size	_Z14PyJit_IterNextP7_objectPi, .-_Z14PyJit_IterNextP7_objectPi
	.globl	_Z23PyJit_IterNextOptimizedP7_objectPiPmS2_
	.type	_Z23PyJit_IterNextOptimizedP7_objectPiPmS2_, @function
_Z23PyJit_IterNextOptimizedP7_objectPiPmS2_:
.LFB3787:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	224(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	jne	.L542
	call	PyErr_Occurred
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	je	.L542
	movq	PyExc_StopIteration(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L543
	movq	-32(%rbp), %rax
	movl	$1, (%rax)
	movl	$0, %eax
	jmp	.L544
.L543:
	movq	-32(%rbp), %rax
	movl	$0, (%rax)
	call	PyErr_Clear
.L542:
	movq	-8(%rbp), %rax
.L544:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3787:
	.size	_Z23PyJit_IterNextOptimizedP7_objectPiPmS2_, .-_Z23PyJit_IterNextOptimizedP7_objectPiPmS2_
	.globl	_Z13PyJit_CellSetP7_objectS0_
	.type	_Z13PyJit_CellSetP7_objectS0_, @function
_Z13PyJit_CellSetP7_objectS0_:
.LFB3788:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyCell_Set
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	Py_DecRef
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3788:
	.size	_Z13PyJit_CellSetP7_objectS0_, .-_Z13PyJit_CellSetP7_objectS0_
	.section	.rodata
.LC28:
	.string	"__build_class__ not found"
	.text
	.globl	_Z16PyJit_BuildClassP6_frame
	.type	_Z16PyJit_BuildClassP6_frame, @function
_Z16PyJit_BuildClassP6_frame:
.LFB3789:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	40(%rax), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L547
	movq	-24(%rbp), %rax
	movq	40(%rax), %rax
	movl	$_ZZ16PyJit_BuildClassP6_frameE20PyId___build_class__, %esi
	movq	%rax, %rdi
	call	_PyDict_GetItemId
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.L548
	movq	PyExc_NameError(%rip), %rax
	movl	$.LC28, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L549
.L548:
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L550
.L547:
	movl	$_ZZ16PyJit_BuildClassP6_frameE20PyId___build_class__, %edi
	call	_PyUnicode_FromId
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	jne	.L551
	movl	$0, %eax
	jmp	.L549
.L551:
	movq	-24(%rbp), %rax
	movq	40(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.L550
	movq	PyExc_KeyError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L550
	movq	PyExc_NameError(%rip), %rax
	movl	$.LC28, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L549
.L550:
	movq	-16(%rbp), %rax
.L549:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3789:
	.size	_Z16PyJit_BuildClassP6_frame, .-_Z16PyJit_BuildClassP6_frame
	.section	.rodata
.LC29:
	.string	""
.LC30:
	.string	"s"
	.align 8
.LC31:
	.string	"need more than %d value%s to unpack"
	.align 8
.LC32:
	.string	"too many values to unpack (expected %d)"
	.align 8
.LC33:
	.string	"need more than %zd values to unpack"
	.text
	.globl	_Z22PyJit_UnpackSequenceExP7_objectmmPS0_S1_PS1_
	.type	_Z22PyJit_UnpackSequenceExP7_objectmmPS0_S1_PS1_, @function
_Z22PyJit_UnpackSequenceExP7_objectmmPS0_S1_PS1_:
.LFB3790:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -216(%rbp)
	movq	%rsi, -224(%rbp)
	movq	%rdx, -232(%rbp)
	movq	%rcx, -240(%rbp)
	movq	%r8, -248(%rbp)
	movq	%r9, -256(%rbp)
	movq	-216(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyTuple_Type, %rax
	jne	.L553
	movq	-216(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, %rcx
	movq	-224(%rbp), %rdx
	movq	-232(%rbp), %rax
	addq	%rdx, %rax
	cmpq	%rax, %rcx
	jb	.L553
	movq	-216(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, %rcx
	movq	-224(%rbp), %rdx
	movq	-232(%rbp), %rax
	addq	%rdx, %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, %rdi
	call	PyList_New
	movq	%rax, -152(%rbp)
	cmpq	$0, -152(%rbp)
	jne	.L554
	movl	$0, %eax
	jmp	.L555
.L554:
	movl	$0, -200(%rbp)
.L557:
	movl	-200(%rbp), %eax
	cltq
	cmpq	-160(%rbp), %rax
	jnb	.L556
	movq	-152(%rbp), %rax
	movq	24(%rax), %rax
	movl	-200(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movl	-200(%rbp), %eax
	movslq	%eax, %rcx
	movq	-224(%rbp), %rax
	addq	%rax, %rcx
	movq	-216(%rbp), %rax
	addq	$2, %rcx
	movq	8(%rax,%rcx,8), %rax
	movq	%rax, (%rdx)
	addl	$1, -200(%rbp)
	jmp	.L557
.L556:
	movq	-216(%rbp), %rax
	leaq	24(%rax), %rcx
	movq	-224(%rbp), %rdx
	movq	-160(%rbp), %rax
	addq	%rdx, %rax
	salq	$3, %rax
	leaq	(%rcx,%rax), %rdx
	movq	-256(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-248(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	-216(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -144(%rbp)
	movq	-216(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -136(%rbp)
	movl	$0, -196(%rbp)
.L559:
	movl	-196(%rbp), %eax
	cltq
	cmpq	-136(%rbp), %rax
	jge	.L558
	movl	-196(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-144(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	addl	$1, -196(%rbp)
	jmp	.L559
.L558:
	movq	-144(%rbp), %rax
	jmp	.L555
.L553:
	movq	-216(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyList_Type, %rax
	jne	.L560
	movq	-216(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, %rcx
	movq	-224(%rbp), %rdx
	movq	-232(%rbp), %rax
	addq	%rdx, %rax
	cmpq	%rax, %rcx
	jb	.L560
	movq	-216(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, %rcx
	movq	-224(%rbp), %rdx
	movq	-232(%rbp), %rax
	addq	%rdx, %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, %rdi
	call	PyList_New
	movq	%rax, -120(%rbp)
	cmpq	$0, -120(%rbp)
	jne	.L561
	movl	$0, %eax
	jmp	.L555
.L561:
	movl	$0, -192(%rbp)
.L563:
	movl	-192(%rbp), %eax
	cltq
	cmpq	-128(%rbp), %rax
	jnb	.L562
	movq	-120(%rbp), %rax
	movq	24(%rax), %rax
	movl	-192(%rbp), %edx
	movslq	%edx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	-216(%rbp), %rax
	movq	24(%rax), %rax
	movl	-192(%rbp), %ecx
	movslq	%ecx, %rsi
	movq	-224(%rbp), %rcx
	addq	%rsi, %rcx
	salq	$3, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rax
	movq	%rax, (%rdx)
	addl	$1, -192(%rbp)
	jmp	.L563
.L562:
	movq	-216(%rbp), %rax
	movq	24(%rax), %rax
	movq	-224(%rbp), %rcx
	movq	-128(%rbp), %rdx
	addq	%rcx, %rdx
	salq	$3, %rdx
	addq	%rax, %rdx
	movq	-256(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-248(%rbp), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	-216(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -112(%rbp)
	movq	-216(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -104(%rbp)
	movl	$0, -188(%rbp)
.L565:
	movl	-188(%rbp), %eax
	cltq
	cmpq	-104(%rbp), %rax
	jge	.L564
	movl	-188(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-112(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	addl	$1, -188(%rbp)
	jmp	.L565
.L564:
	movq	-112(%rbp), %rax
	jmp	.L555
.L560:
	movq	-216(%rbp), %rax
	movq	%rax, %rdi
	call	PyObject_GetIter
	movq	%rax, -96(%rbp)
	cmpq	$0, -96(%rbp)
	je	.L591
	movq	-224(%rbp), %rdx
	movq	-232(%rbp), %rax
	addq	%rdx, %rax
	leaq	0(,%rax,8), %rdx
	movq	-240(%rbp), %rax
	addq	%rdx, %rax
	movq	%rax, -176(%rbp)
	movl	$0, -184(%rbp)
.L573:
	movl	-184(%rbp), %eax
	cltq
	cmpq	-224(%rbp), %rax
	jnb	.L568
	movq	-96(%rbp), %rax
	movq	%rax, %rdi
	call	PyIter_Next
	movq	%rax, -88(%rbp)
	cmpq	$0, -88(%rbp)
	jne	.L569
	call	PyErr_Occurred
	testq	%rax, %rax
	sete	%al
	testb	%al, %al
	je	.L592
	cmpl	$1, -184(%rbp)
	jne	.L571
	movl	$.LC29, %ecx
	jmp	.L572
.L571:
	movl	$.LC30, %ecx
.L572:
	movq	PyExc_ValueError(%rip), %rax
	movl	-184(%rbp), %edx
	movl	$.LC31, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L592
.L569:
	movl	-184(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-240(%rbp), %rax
	addq	%rax, %rdx
	movq	-88(%rbp), %rax
	movq	%rax, (%rdx)
	addl	$1, -184(%rbp)
	jmp	.L573
.L568:
	cmpq	$0, -248(%rbp)
	jne	.L574
	movq	-96(%rbp), %rax
	movq	%rax, %rdi
	call	PyIter_Next
	movq	%rax, -80(%rbp)
	cmpq	$0, -80(%rbp)
	jne	.L575
	call	PyErr_Occurred
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L593
	movq	-96(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L577
	movq	-72(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L577:
	movq	-240(%rbp), %rax
	jmp	.L555
.L575:
	movq	-80(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L578
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L578:
	movq	PyExc_ValueError(%rip), %rax
	movq	-224(%rbp), %rdx
	movl	$.LC32, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L567
.L574:
	movq	-96(%rbp), %rax
	movq	%rax, %rdi
	call	PySequence_List
	movq	%rax, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	.L594
	movq	-248(%rbp), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, (%rax)
	addl	$1, -184(%rbp)
	movq	-56(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	cmpq	-232(%rbp), %rax
	jnb	.L580
	movq	-224(%rbp), %rdx
	movq	-48(%rbp), %rax
	addq	%rax, %rdx
	movq	PyExc_ValueError(%rip), %rax
	movl	$.LC33, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L567
.L580:
	movq	-232(%rbp), %rax
	movq	%rax, -168(%rbp)
.L582:
	cmpq	$0, -168(%rbp)
	je	.L581
	subq	$8, -176(%rbp)
	movq	-56(%rbp), %rax
	movq	24(%rax), %rdx
	movq	-48(%rbp), %rax
	subq	-168(%rbp), %rax
	salq	$3, %rax
	addq	%rdx, %rax
	movq	(%rax), %rdx
	movq	-176(%rbp), %rax
	movq	%rdx, (%rax)
	subq	$1, -168(%rbp)
	addl	$1, -184(%rbp)
	jmp	.L582
.L581:
	movq	-48(%rbp), %rax
	subq	-232(%rbp), %rax
	movq	%rax, %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, 16(%rax)
	movq	-96(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L583
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L583:
	cmpq	$0, -256(%rbp)
	je	.L584
	movq	-224(%rbp), %rax
	leaq	0(,%rax,8), %rdx
	movq	-240(%rbp), %rax
	addq	%rax, %rdx
	movq	-256(%rbp), %rax
	movq	%rdx, (%rax)
.L584:
	movq	-240(%rbp), %rax
	jmp	.L555
.L591:
	nop
	jmp	.L567
.L592:
	nop
	jmp	.L567
.L593:
	nop
	jmp	.L567
.L594:
	nop
.L567:
	movl	$0, -180(%rbp)
.L588:
	movl	-180(%rbp), %eax
	cltq
	cmpq	-224(%rbp), %rax
	jnb	.L585
	movl	-180(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-240(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.L586
	movq	-32(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L586
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L586:
	addl	$1, -180(%rbp)
	jmp	.L588
.L585:
	movq	-96(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L589
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L589
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L589:
	movl	$0, %eax
.L555:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3790:
	.size	_Z22PyJit_UnpackSequenceExP7_objectmmPS0_S1_PS1_, .-_Z22PyJit_UnpackSequenceExP7_objectmmPS0_S1_PS1_
	.globl	_Z17PyJit_UnpackErrormm
	.type	_Z17PyJit_UnpackErrormm, @function
_Z17PyJit_UnpackErrormm:
.LFB3791:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	cmpq	-8(%rbp), %rax
	jnb	.L596
	cmpq	$1, -16(%rbp)
	jne	.L597
	movl	$.LC29, %ecx
	jmp	.L598
.L597:
	movl	$.LC30, %ecx
.L598:
	movq	PyExc_ValueError(%rip), %rax
	movq	-16(%rbp), %rdx
	movl	$.LC31, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	jmp	.L600
.L596:
	movq	-16(%rbp), %rax
	cmpq	-8(%rbp), %rax
	jbe	.L600
	movq	PyExc_ValueError(%rip), %rax
	movq	-8(%rbp), %rdx
	movl	$.LC32, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
.L600:
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3791:
	.size	_Z17PyJit_UnpackErrormm, .-_Z17PyJit_UnpackErrormm
	.globl	_Z20PyJit_UnpackSequenceP7_objectmPS0_
	.type	_Z20PyJit_UnpackSequenceP7_objectmPS0_, @function
_Z20PyJit_UnpackSequenceP7_objectmPS0_:
.LFB3792:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyTuple_Type, %rax
	jne	.L602
	movq	-40(%rbp), %rax
	movq	16(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	.L603
	movq	-40(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -16(%rbp)
	movl	$0, -24(%rbp)
.L605:
	movl	-24(%rbp), %eax
	cltq
	cmpq	-48(%rbp), %rax
	jnb	.L604
	movl	-24(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-16(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	addl	$1, -24(%rbp)
	jmp	.L605
.L604:
	movq	-16(%rbp), %rax
	jmp	.L606
.L603:
	movq	-40(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z17PyJit_UnpackErrormm
	movl	$0, %eax
	jmp	.L606
.L602:
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyList_Type, %rax
	jne	.L607
	movq	-40(%rbp), %rax
	movq	16(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	.L608
	movq	-40(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -8(%rbp)
	movl	$0, -20(%rbp)
.L610:
	movl	-20(%rbp), %eax
	cltq
	cmpq	-48(%rbp), %rax
	jnb	.L609
	movl	-20(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-8(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	addl	$1, -20(%rbp)
	jmp	.L610
.L609:
	movq	-8(%rbp), %rax
	jmp	.L606
.L608:
	movq	-40(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z17PyJit_UnpackErrormm
	movl	$0, %eax
	jmp	.L606
.L607:
	movq	-56(%rbp), %rdx
	movq	-48(%rbp), %rsi
	movq	-40(%rbp), %rax
	movl	$0, %r9d
	movl	$0, %r8d
	movq	%rdx, %rcx
	movl	$0, %edx
	movq	%rax, %rdi
	call	_Z22PyJit_UnpackSequenceExP7_objectmmPS0_S1_PS1_
.L606:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3792:
	.size	_Z20PyJit_UnpackSequenceP7_objectmPS0_, .-_Z20PyJit_UnpackSequenceP7_objectmPS0_
	.globl	_Z14PyJit_LoadAttrP7_objectS0_
	.type	_Z14PyJit_LoadAttrP7_objectS0_, @function
_Z14PyJit_LoadAttrP7_objectS0_:
.LFB3793:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetAttr
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L612
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L612:
	movq	-16(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3793:
	.size	_Z14PyJit_LoadAttrP7_objectS0_, .-_Z14PyJit_LoadAttrP7_objectS0_
	.section	.rodata
.LC34:
	.string	"<NULL>"
.LC35:
	.string	"<null type>"
	.text
	.globl	_Z7ObjInfoP7_object
	.type	_Z7ObjInfoP7_object, @function
_Z7ObjInfoP7_object:
.LFB3794:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	cmpq	$0, -8(%rbp)
	jne	.L615
	movl	$.LC34, %eax
	jmp	.L616
.L615:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	168(%rax), %rax
	andl	$268435456, %eax
	testq	%rax, %rax
	je	.L617
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	PyUnicode_AsUTF8
	jmp	.L616
.L617:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.L618
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rax
	jmp	.L616
.L618:
	movl	$.LC35, %eax
.L616:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3794:
	.size	_Z7ObjInfoP7_object, .-_Z7ObjInfoP7_object
	.globl	_Z15PyJit_StoreAttrP7_objectS0_S0_
	.type	_Z15PyJit_StoreAttrP7_objectS0_S0_, @function
_Z15PyJit_StoreAttrP7_objectS0_S0_:
.LFB3795:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-48(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_SetAttr
	movl	%eax, -20(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L620
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L620:
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L621
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L621:
	movl	-20(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3795:
	.size	_Z15PyJit_StoreAttrP7_objectS0_S0_, .-_Z15PyJit_StoreAttrP7_objectS0_S0_
	.globl	_Z16PyJit_DeleteAttrP7_objectS0_
	.type	_Z16PyJit_DeleteAttrP7_objectS0_, @function
_Z16PyJit_DeleteAttrP7_objectS0_:
.LFB3796:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rcx
	movq	-24(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_SetAttr
	movl	%eax, -12(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L624
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L624:
	movl	-12(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3796:
	.size	_Z16PyJit_DeleteAttrP7_objectS0_, .-_Z16PyJit_DeleteAttrP7_objectS0_
	.section	.rodata
.LC36:
	.string	"no locals when loading %R"
	.text
	.globl	_Z14PyJit_LoadNameP6_frameP7_object
	.type	_Z14PyJit_LoadNameP6_frameP7_object, @function
_Z14PyJit_LoadNameP6_frameP7_object:
.LFB3797:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	56(%rax), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jne	.L627
	movq	PyExc_SystemError(%rip), %rax
	movq	-48(%rbp), %rdx
	movl	$.LC36, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	movl	$0, %eax
	jmp	.L628
.L627:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L629
	movq	-48(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_GetItem
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L631
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L631
.L629:
	movq	-48(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L632
	call	PyThreadState_Get
	movq	80(%rax), %rax
	testq	%rax, %rax
	je	.L632
	movl	$1, %eax
	jmp	.L633
.L632:
	movl	$0, %eax
.L633:
	testb	%al, %al
	je	.L631
	movq	PyExc_KeyError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	.L634
	movl	$0, %eax
	jmp	.L628
.L634:
	call	PyErr_Clear
.L631:
	cmpq	$0, -32(%rbp)
	jne	.L635
	movq	-40(%rbp), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_GetItem
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	je	.L636
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
.L636:
	cmpq	$0, -32(%rbp)
	jne	.L635
	movq	-40(%rbp), %rax
	movq	40(%rax), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L638
	movq	-40(%rbp), %rax
	movq	40(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyDict_GetItem
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L639
	movq	PyExc_NameError(%rip), %rax
	movq	-48(%rbp), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
	movl	$0, %eax
	jmp	.L628
.L639:
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L635
.L638:
	movq	-40(%rbp), %rax
	movq	40(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_GetItem
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L635
	movq	PyExc_KeyError(%rip), %rax
	movq	%rax, %rdi
	call	PyErr_ExceptionMatches
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	.L640
	movq	PyExc_NameError(%rip), %rax
	movq	-48(%rbp), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
.L640:
	movl	$0, %eax
	jmp	.L628
.L635:
	movq	-32(%rbp), %rax
.L628:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3797:
	.size	_Z14PyJit_LoadNameP6_frameP7_object, .-_Z14PyJit_LoadNameP6_frameP7_object
	.section	.rodata
	.align 8
.LC37:
	.string	"no locals found when storing %R"
	.text
	.globl	_Z15PyJit_StoreNameP7_objectP6_frameS0_
	.type	_Z15PyJit_StoreNameP7_objectP6_frameS0_, @function
_Z15PyJit_StoreNameP7_objectP6_frameS0_:
.LFB3798:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	-48(%rbp), %rax
	movq	56(%rax), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jne	.L642
	movq	PyExc_SystemError(%rip), %rax
	movq	-56(%rbp), %rdx
	movl	$.LC37, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L643
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L643:
	movl	$1, %eax
	jmp	.L644
.L642:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyDict_Type, %rax
	jne	.L645
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	movl	%eax, -28(%rbp)
	jmp	.L646
.L645:
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_SetItem
	movl	%eax, -28(%rbp)
.L646:
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L647
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L647:
	movl	-28(%rbp), %eax
.L644:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3798:
	.size	_Z15PyJit_StoreNameP7_objectP6_frameS0_, .-_Z15PyJit_StoreNameP7_objectP6_frameS0_
	.section	.rodata
.LC38:
	.string	"no locals when deleting %R"
	.text
	.globl	_Z16PyJit_DeleteNameP6_frameP7_object
	.type	_Z16PyJit_DeleteNameP6_frameP7_object, @function
_Z16PyJit_DeleteNameP6_frameP7_object:
.LFB3799:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	56(%rax), %rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	jne	.L649
	movq	PyExc_SystemError(%rip), %rax
	movq	-32(%rbp), %rdx
	movl	$.LC38, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	PyErr_Format
	movl	$1, %eax
	jmp	.L650
.L649:
	movq	-32(%rbp), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_DelItem
	movl	%eax, -12(%rbp)
	cmpl	$0, -12(%rbp)
	je	.L651
	movq	PyExc_NameError(%rip), %rax
	movq	-32(%rbp), %rdx
	movl	$.LC27, %esi
	movq	%rax, %rdi
	call	_ZL20format_exc_check_argP7_objectPKcS0_
.L651:
	movl	-12(%rbp), %eax
.L650:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3799:
	.size	_Z16PyJit_DeleteNameP6_frameP7_object, .-_Z16PyJit_DeleteNameP6_frameP7_object
	.section	.rodata
.LC39:
	.string	"globals != NULL"
.LC40:
	.string	"tstate != NULL"
	.text
	.type	_ZL13fast_functionP7_objectPS0_i, @function
_ZL13fast_functionP7_objectPS0_i:
.LFB3800:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$144, %rsp
	movq	%rdi, -120(%rbp)
	movq	%rsi, -128(%rbp)
	movl	%edx, -132(%rbp)
	movq	-120(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -88(%rbp)
	movq	-120(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	32(%rax), %rax
	movq	%rax, -72(%rbp)
	cmpq	$0, -72(%rbp)
	jne	.L653
	movq	-88(%rbp), %rax
	movl	16(%rax), %eax
	cmpl	-132(%rbp), %eax
	jne	.L653
	movq	-88(%rbp), %rax
	movl	20(%rax), %eax
	testl	%eax, %eax
	jne	.L653
	movq	-88(%rbp), %rax
	movl	32(%rax), %eax
	cmpl	$67, %eax
	jne	.L653
	movq	$0, -64(%rbp)
	call	PyThreadState_Get
	movq	%rax, -56(%rbp)
	cmpq	$0, -80(%rbp)
	jne	.L654
	movl	$_ZZL13fast_functionP7_objectPS0_iE19__PRETTY_FUNCTION__, %ecx
	movl	$1719, %edx
	movl	$.LC2, %esi
	movl	$.LC39, %edi
	call	__assert_fail
.L654:
	cmpq	$0, -56(%rbp)
	jne	.L655
	movl	$_ZZL13fast_functionP7_objectPS0_iE19__PRETTY_FUNCTION__, %ecx
	movl	$1724, %edx
	movl	$.LC2, %esi
	movl	$.LC40, %edi
	call	__assert_fail
.L655:
	movq	-80(%rbp), %rdx
	movq	-88(%rbp), %rsi
	movq	-56(%rbp), %rax
	movl	$0, %ecx
	movq	%rax, %rdi
	call	PyFrame_New
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	jne	.L656
	movl	$0, %eax
	jmp	.L657
.L656:
	movq	-48(%rbp), %rax
	addq	$376, %rax
	movq	%rax, -40(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, -96(%rbp)
	movl	$0, -104(%rbp)
.L659:
	movl	-104(%rbp), %eax
	cmpl	-132(%rbp), %eax
	jge	.L658
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	movl	-104(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-40(%rbp), %rax
	leaq	(%rdx,%rax), %rcx
	movq	-96(%rbp), %rax
	leaq	8(%rax), %rdx
	movq	%rdx, -96(%rbp)
	movq	(%rax), %rax
	movq	%rax, (%rcx)
	addl	$1, -104(%rbp)
	jmp	.L659
.L658:
	movq	-48(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	call	PyEval_EvalFrameEx
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movl	32(%rax), %eax
	leal	1(%rax), %edx
	movq	-56(%rbp), %rax
	movl	%edx, 32(%rax)
	movq	-48(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L660
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L660:
	movq	-56(%rbp), %rax
	movl	32(%rax), %eax
	leal	-1(%rax), %edx
	movq	-56(%rbp), %rax
	movl	%edx, 32(%rax)
	movq	-64(%rbp), %rax
	jmp	.L657
.L653:
	movl	-132(%rbp), %eax
	cltq
	movq	%rax, %rdi
	call	PyTuple_New
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jne	.L661
	movl	$0, %eax
	jmp	.L657
.L661:
	movl	$0, -100(%rbp)
.L663:
	movl	-100(%rbp), %eax
	cmpl	-132(%rbp), %eax
	jge	.L662
	movl	-100(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-128(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	(%rax), %rdx
	addq	$1, %rdx
	movq	%rdx, (%rax)
	movl	-100(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-128(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rdx
	movq	-24(%rbp), %rax
	movl	-100(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	$2, %rcx
	movq	%rdx, 8(%rax,%rcx,8)
	addl	$1, -100(%rbp)
	jmp	.L663
.L662:
	movq	-24(%rbp), %rcx
	movq	-120(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L664
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L664:
	movq	-16(%rbp), %rax
.L657:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3800:
	.size	_ZL13fast_functionP7_objectPS0_i, .-_ZL13fast_functionP7_objectPS0_i
	.globl	_Z5Call0P7_object
	.type	_Z5Call0P7_object, @function
_Z5Call0P7_object:
.LFB3801:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L666
	movq	$0, -16(%rbp)
	leaq	-16(%rbp), %rcx
	movq	-56(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_ZL13fast_functionP7_objectPS0_i
	movq	%rax, -48(%rbp)
	jmp	.L667
.L666:
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L668
	movq	g_emptyTuple(%rip), %rcx
	movq	-56(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyCFunction_Call
	movq	%rax, -48(%rbp)
	jmp	.L667
.L668:
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyMethod_Type, %rax
	jne	.L669
	movq	-56(%rbp), %rax
	movq	24(%rax), %rax
	testq	%rax, %rax
	je	.L669
	movq	-56(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -40(%rbp)
	movq	-56(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z5Call1P7_objectS0_
	movq	%rax, -48(%rbp)
	jmp	.L667
.L669:
	movq	g_emptyTuple(%rip), %rcx
	movq	-56(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -48(%rbp)
.L667:
	movq	-56(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L670
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L670:
	movq	-48(%rbp), %rax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L672
	call	__stack_chk_fail
.L672:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3801:
	.size	_Z5Call0P7_object, .-_Z5Call0P7_object
	.globl	_Z14Call0_FunctionP7_objectPPv
	.type	_Z14Call0_FunctionP7_objectPPv, @function
_Z14Call0_FunctionP7_objectPPv:
.LFB3802:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L674
	movq	$0, -16(%rbp)
	leaq	-16(%rbp), %rcx
	movq	-40(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_ZL13fast_functionP7_objectPS0_i
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L677
	jmp	.L679
.L674:
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z13Call0_GenericP7_objectPPv
	jmp	.L676
.L679:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L677:
	movq	-32(%rbp), %rax
.L676:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L678
	call	__stack_chk_fail
.L678:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3802:
	.size	_Z14Call0_FunctionP7_objectPPv, .-_Z14Call0_FunctionP7_objectPPv
	.globl	_Z12Call0_MethodP7_objectPPv
	.type	_Z12Call0_MethodP7_objectPPv, @function
_Z12Call0_MethodP7_objectPPv:
.LFB3803:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyMethod_Type, %rax
	jne	.L681
	movq	-40(%rbp), %rax
	movq	24(%rax), %rax
	testq	%rax, %rax
	je	.L681
	movq	-40(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z5Call1P7_objectS0_
	movq	%rax, -16(%rbp)
	nop
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L684
	jmp	.L685
.L681:
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z13Call0_GenericP7_objectPPv
	jmp	.L683
.L685:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L684:
	movq	-16(%rbp), %rax
.L683:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3803:
	.size	_Z12Call0_MethodP7_objectPPv, .-_Z12Call0_MethodP7_objectPPv
	.globl	_Z15Call0_CFunctionP7_objectPPv
	.type	_Z15Call0_CFunctionP7_objectPPv, @function
_Z15Call0_CFunctionP7_objectPPv:
.LFB3804:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L687
	movq	g_emptyTuple(%rip), %rcx
	movq	-24(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyCFunction_Call
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L690
	jmp	.L691
.L687:
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z13Call0_GenericP7_objectPPv
	jmp	.L689
.L691:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L690:
	movq	-16(%rbp), %rax
.L689:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3804:
	.size	_Z15Call0_CFunctionP7_objectPPv, .-_Z15Call0_CFunctionP7_objectPPv
	.globl	_Z13Call0_GenericP7_objectPPv
	.type	_Z13Call0_GenericP7_objectPPv, @function
_Z13Call0_GenericP7_objectPPv:
.LFB3805:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L693
	movq	-32(%rbp), %rax
	movq	$_Z14Call0_FunctionP7_objectPPv, (%rax)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14Call0_FunctionP7_objectPPv
	jmp	.L694
.L693:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L695
	movq	-32(%rbp), %rax
	movq	$_Z15Call0_CFunctionP7_objectPPv, (%rax)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15Call0_CFunctionP7_objectPPv
	jmp	.L694
.L695:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyMethod_Type, %rax
	jne	.L696
	movq	-24(%rbp), %rax
	movq	24(%rax), %rax
	testq	%rax, %rax
	je	.L696
	movq	-32(%rbp), %rax
	movq	$_Z12Call0_MethodP7_objectPPv, (%rax)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12Call0_MethodP7_objectPPv
	jmp	.L694
.L696:
	movq	g_emptyTuple(%rip), %rcx
	movq	-24(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L697
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L697:
	movq	-16(%rbp), %rax
.L694:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3805:
	.size	_Z13Call0_GenericP7_objectPPv, .-_Z13Call0_GenericP7_objectPPv
	.globl	_Z5Call1P7_objectS0_
	.type	_Z5Call1P7_objectS0_, @function
_Z5Call1P7_objectS0_:
.LFB3806:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movq	%rdi, -88(%rbp)
	movq	%rsi, -96(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	$0, -80(%rbp)
	movq	-88(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L699
	movq	-96(%rbp), %rax
	movq	%rax, -16(%rbp)
	leaq	-16(%rbp), %rcx
	movq	-88(%rbp), %rax
	movl	$1, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_ZL13fast_functionP7_objectPS0_i
	movq	%rax, -80(%rbp)
	movq	-96(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L710
	movq	-72(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	nop
	jmp	.L710
.L699:
	movq	-88(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyMethod_Type, %rax
	jne	.L702
	movq	-88(%rbp), %rax
	movq	24(%rax), %rax
	testq	%rax, %rax
	je	.L702
	movq	-88(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-96(%rbp), %rdx
	movq	-64(%rbp), %rcx
	movq	-56(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z5Call2P7_objectS0_S0_
	movq	%rax, -80(%rbp)
	jmp	.L701
.L702:
	movl	$1, %edi
	call	PyTuple_New
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	jne	.L703
	movq	-96(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L711
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L711
.L703:
	movq	-48(%rbp), %rax
	movq	-96(%rbp), %rdx
	movq	%rdx, 24(%rax)
	movq	-88(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L705
	movq	-48(%rbp), %rcx
	movq	-88(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyCFunction_Call
	movq	%rax, -80(%rbp)
	jmp	.L706
.L705:
	movq	-48(%rbp), %rcx
	movq	-88(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -80(%rbp)
.L706:
	movq	-48(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L701
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L701
.L710:
	nop
	jmp	.L701
.L711:
	nop
.L701:
	movq	-88(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L707
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L707:
	movq	-80(%rbp), %rax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L709
	call	__stack_chk_fail
.L709:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3806:
	.size	_Z5Call1P7_objectS0_, .-_Z5Call1P7_objectS0_
	.globl	_Z5Call2P7_objectS0_S0_
	.type	_Z5Call2P7_objectS0_S0_, @function
_Z5Call2P7_objectS0_S0_:
.LFB3807:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$144, %rsp
	movq	%rdi, -120(%rbp)
	movq	%rsi, -128(%rbp)
	movq	%rdx, -136(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	$0, -112(%rbp)
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L713
	movq	-128(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-136(%rbp), %rax
	movq	%rax, -24(%rbp)
	leaq	-32(%rbp), %rcx
	movq	-120(%rbp), %rax
	movl	$2, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_ZL13fast_functionP7_objectPS0_i
	movq	%rax, -112(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-104(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L714
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L714:
	movq	-136(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-96(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L726
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-96(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	nop
	jmp	.L726
.L713:
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyMethod_Type, %rax
	jne	.L717
	movq	-120(%rbp), %rax
	movq	24(%rax), %rax
	testq	%rax, %rax
	je	.L717
	movq	-120(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -88(%rbp)
	movq	-120(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-80(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-136(%rbp), %rcx
	movq	-128(%rbp), %rdx
	movq	-88(%rbp), %rsi
	movq	-80(%rbp), %rax
	movq	%rax, %rdi
	call	_Z5Call3P7_objectS0_S0_S0_
	movq	%rax, -112(%rbp)
	jmp	.L716
.L717:
	movl	$2, %edi
	call	PyTuple_New
	movq	%rax, -72(%rbp)
	cmpq	$0, -72(%rbp)
	jne	.L718
	movq	-128(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L719
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L719:
	movq	-136(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L727
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L727
.L718:
	movq	-72(%rbp), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, 24(%rax)
	movq	-72(%rbp), %rax
	movq	-136(%rbp), %rdx
	movq	%rdx, 32(%rax)
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L721
	movq	-72(%rbp), %rcx
	movq	-120(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyCFunction_Call
	movq	%rax, -112(%rbp)
	jmp	.L722
.L721:
	movq	-72(%rbp), %rcx
	movq	-120(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -112(%rbp)
.L722:
	movq	-72(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L716
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L716
.L726:
	nop
	jmp	.L716
.L727:
	nop
.L716:
	movq	-120(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L723
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L723:
	movq	-112(%rbp), %rax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L725
	call	__stack_chk_fail
.L725:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3807:
	.size	_Z5Call2P7_objectS0_S0_, .-_Z5Call2P7_objectS0_S0_
	.globl	_Z5Call3P7_objectS0_S0_S0_
	.type	_Z5Call3P7_objectS0_S0_S0_, @function
_Z5Call3P7_objectS0_S0_S0_:
.LFB3808:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -136(%rbp)
	movq	%rsi, -144(%rbp)
	movq	%rdx, -152(%rbp)
	movq	%rcx, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	$0, -128(%rbp)
	movq	-136(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L729
	movq	-144(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-152(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -16(%rbp)
	leaq	-32(%rbp), %rcx
	movq	-136(%rbp), %rax
	movl	$3, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_ZL13fast_functionP7_objectPS0_i
	movq	%rax, -128(%rbp)
	movq	-144(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L730
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L730:
	movq	-152(%rbp), %rax
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-112(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L731
	movq	-112(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-112(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L731:
	movq	-160(%rbp), %rax
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-104(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-104(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L744
	movq	-104(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-104(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	nop
	jmp	.L744
.L729:
	movq	-136(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyMethod_Type, %rax
	jne	.L734
	movq	-136(%rbp), %rax
	movq	24(%rax), %rax
	testq	%rax, %rax
	je	.L734
	movq	-136(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -96(%rbp)
	movq	-136(%rbp), %rax
	movq	16(%rax), %rax
	movq	%rax, -88(%rbp)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-96(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-160(%rbp), %rdi
	movq	-152(%rbp), %rcx
	movq	-144(%rbp), %rdx
	movq	-96(%rbp), %rsi
	movq	-88(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z5Call4P7_objectS0_S0_S0_S0_
	movq	%rax, -128(%rbp)
	jmp	.L733
.L734:
	movl	$3, %edi
	call	PyTuple_New
	movq	%rax, -80(%rbp)
	cmpq	$0, -80(%rbp)
	jne	.L735
	movq	-144(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L736
	movq	-72(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L736:
	movq	-152(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L737
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L737:
	movq	-160(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L745
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L745
.L735:
	movq	-80(%rbp), %rax
	movq	-144(%rbp), %rdx
	movq	%rdx, 24(%rax)
	movq	-80(%rbp), %rax
	movq	-152(%rbp), %rdx
	movq	%rdx, 32(%rax)
	movq	-80(%rbp), %rax
	movq	-160(%rbp), %rdx
	movq	%rdx, 40(%rax)
	movq	-136(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L739
	movq	-80(%rbp), %rcx
	movq	-136(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyCFunction_Call
	movq	%rax, -128(%rbp)
	jmp	.L740
.L739:
	movq	-80(%rbp), %rcx
	movq	-136(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -128(%rbp)
.L740:
	movq	-80(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L733
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L733
.L744:
	nop
	jmp	.L733
.L745:
	nop
.L733:
	movq	-136(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L741
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L741:
	movq	-128(%rbp), %rax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L743
	call	__stack_chk_fail
.L743:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3808:
	.size	_Z5Call3P7_objectS0_S0_S0_, .-_Z5Call3P7_objectS0_S0_S0_
	.globl	_Z5Call4P7_objectS0_S0_S0_S0_
	.type	_Z5Call4P7_objectS0_S0_S0_S0_, @function
_Z5Call4P7_objectS0_S0_S0_S0_:
.LFB3809:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$192, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%rdx, -168(%rbp)
	movq	%rcx, -176(%rbp)
	movq	%r8, -184(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	$0, -144(%rbp)
	movq	-152(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyFunction_Type, %rax
	jne	.L747
	movq	-160(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-168(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-176(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-184(%rbp), %rax
	movq	%rax, -24(%rbp)
	leaq	-48(%rbp), %rcx
	movq	-152(%rbp), %rax
	movl	$4, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_ZL13fast_functionP7_objectPS0_i
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-136(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-136(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-136(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L748
	movq	-136(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-136(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L748:
	movq	-168(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L749
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L749:
	movq	-176(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L750
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L750:
	movq	-184(%rbp), %rax
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-112(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L763
	movq	-112(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-112(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	nop
	jmp	.L763
.L747:
	movl	$4, %edi
	call	PyTuple_New
	movq	%rax, -104(%rbp)
	cmpq	$0, -104(%rbp)
	jne	.L753
	movq	-160(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-96(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-96(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L754
	movq	-96(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-96(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L754:
	movq	-168(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-88(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-88(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L755
	movq	-88(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-88(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L755:
	movq	-176(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-80(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L756
	movq	-80(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-80(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L756:
	movq	-184(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-72(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L764
	movq	-72(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-72(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L764
.L753:
	movq	-104(%rbp), %rax
	movq	-160(%rbp), %rdx
	movq	%rdx, 24(%rax)
	movq	-104(%rbp), %rax
	movq	-168(%rbp), %rdx
	movq	%rdx, 32(%rax)
	movq	-104(%rbp), %rax
	movq	-176(%rbp), %rdx
	movq	%rdx, 40(%rax)
	movq	-104(%rbp), %rax
	movq	-184(%rbp), %rdx
	movq	%rdx, 48(%rax)
	movq	-152(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyCFunction_Type, %rax
	jne	.L758
	movq	-104(%rbp), %rcx
	movq	-152(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyCFunction_Call
	movq	%rax, -144(%rbp)
	jmp	.L759
.L758:
	movq	-104(%rbp), %rcx
	movq	-152(%rbp), %rax
	movl	$0, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -144(%rbp)
.L759:
	movq	-104(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L752
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L752
.L763:
	nop
	jmp	.L752
.L764:
	nop
.L752:
	movq	-152(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-56(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-56(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L760
	movq	-56(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-56(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L760:
	movq	-144(%rbp), %rax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L762
	call	__stack_chk_fail
.L762:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3809:
	.size	_Z5Call4P7_objectS0_S0_S0_S0_, .-_Z5Call4P7_objectS0_S0_S0_S0_
	.globl	_Z13PyJit_KwCall1P7_objectS0_S0_
	.type	_Z13PyJit_KwCall1P7_objectS0_S0_, @function
_Z13PyJit_KwCall1P7_objectS0_S0_:
.LFB3810:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movl	$0, %eax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3810:
	.size	_Z13PyJit_KwCall1P7_objectS0_S0_, .-_Z13PyJit_KwCall1P7_objectS0_S0_
	.globl	_Z13PyJit_KwCall2P7_objectS0_S0_S0_
	.type	_Z13PyJit_KwCall2P7_objectS0_S0_S0_, @function
_Z13PyJit_KwCall2P7_objectS0_S0_S0_:
.LFB3811:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movl	$0, %eax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3811:
	.size	_Z13PyJit_KwCall2P7_objectS0_S0_S0_, .-_Z13PyJit_KwCall2P7_objectS0_S0_S0_
	.globl	_Z13PyJit_KwCall3P7_objectS0_S0_S0_S0_
	.type	_Z13PyJit_KwCall3P7_objectS0_S0_S0_S0_, @function
_Z13PyJit_KwCall3P7_objectS0_S0_S0_S0_:
.LFB3812:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movl	$0, %eax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3812:
	.size	_Z13PyJit_KwCall3P7_objectS0_S0_S0_S0_, .-_Z13PyJit_KwCall3P7_objectS0_S0_S0_S0_
	.globl	_Z13PyJit_KwCall4P7_objectS0_S0_S0_S0_S0_
	.type	_Z13PyJit_KwCall4P7_objectS0_S0_S0_S0_S0_, @function
_Z13PyJit_KwCall4P7_objectS0_S0_S0_S0_S0_:
.LFB3813:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movq	%r9, -48(%rbp)
	movl	$0, %eax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3813:
	.size	_Z13PyJit_KwCall4P7_objectS0_S0_S0_S0_S0_, .-_Z13PyJit_KwCall4P7_objectS0_S0_S0_S0_S0_
	.globl	_Z13PyJit_KwCallNP7_objectS0_S0_
	.type	_Z13PyJit_KwCallNP7_objectS0_S0_, @function
_Z13PyJit_KwCallNP7_objectS0_S0_:
.LFB3814:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$152, %rsp
	.cfi_offset 3, -24
	movq	%rdi, -136(%rbp)
	movq	%rsi, -144(%rbp)
	movq	%rdx, -152(%rbp)
	movq	$0, -112(%rbp)
	movq	$0, -104(%rbp)
	movq	-144(%rbp), %rax
	movq	%rax, %rdi
	call	PyTuple_Size
	movq	%rax, %rbx
	movq	-152(%rbp), %rax
	movq	%rax, %rdi
	call	PyTuple_Size
	subq	%rax, %rbx
	movq	%rbx, %rax
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	%rax, %rdi
	call	PyTuple_New
	movq	%rax, -88(%rbp)
	cmpq	$0, -88(%rbp)
	je	.L789
	movl	$0, -120(%rbp)
.L777:
	movl	-120(%rbp), %eax
	cltq
	cmpq	-96(%rbp), %rax
	jge	.L776
	movq	-144(%rbp), %rax
	movl	-120(%rbp), %edx
	movslq	%edx, %rdx
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rax
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-80(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-88(%rbp), %rax
	movl	-120(%rbp), %edx
	movslq	%edx, %rdx
	leaq	2(%rdx), %rcx
	movq	-80(%rbp), %rdx
	movq	%rdx, 8(%rax,%rcx,8)
	addl	$1, -120(%rbp)
	jmp	.L777
.L776:
	call	PyDict_New
	movq	%rax, -104(%rbp)
	cmpq	$0, -104(%rbp)
	je	.L790
	movl	$0, -116(%rbp)
.L780:
	movl	-116(%rbp), %eax
	movslq	%eax, %rdx
	movq	-152(%rbp), %rax
	movq	16(%rax), %rax
	cmpq	%rax, %rdx
	jge	.L779
	movl	-116(%rbp), %eax
	movslq	%eax, %rdx
	movq	-96(%rbp), %rax
	addq	%rax, %rdx
	movq	-144(%rbp), %rax
	addq	$2, %rdx
	movq	8(%rax,%rdx,8), %rdx
	movq	-152(%rbp), %rax
	movl	-116(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	$2, %rcx
	movq	8(%rax,%rcx,8), %rcx
	movq	-104(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyDict_SetItem
	addl	$1, -116(%rbp)
	jmp	.L780
.L779:
	movq	-104(%rbp), %rdx
	movq	-88(%rbp), %rcx
	movq	-136(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyObject_Call
	movq	%rax, -112(%rbp)
	jmp	.L775
.L789:
	nop
	jmp	.L775
.L790:
	nop
.L775:
	movq	-104(%rbp), %rax
	movq	%rax, -72(%rbp)
	cmpq	$0, -72(%rbp)
	je	.L781
	movq	-72(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-64(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-64(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L781
	movq	-64(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-64(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L781:
	movq	-88(%rbp), %rax
	movq	%rax, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	.L783
	movq	-56(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-48(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L783
	movq	-48(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-48(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L783:
	movq	-136(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-40(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L785
	movq	-40(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L785:
	movq	-144(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L786
	movq	-32(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L786:
	movq	-152(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L787
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-24(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L787:
	movq	-112(%rbp), %rax
	addq	$152, %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3814:
	.size	_Z13PyJit_KwCallNP7_objectS0_S0_, .-_Z13PyJit_KwCallNP7_objectS0_S0_
	.globl	_Z8PyJit_IsP7_objectS0_
	.type	_Z8PyJit_IsP7_objectS0_, @function
_Z8PyJit_IsP7_objectS0_:
.LFB3815:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	cmpq	-48(%rbp), %rax
	jne	.L792
	movl	$_Py_TrueStruct, %eax
	jmp	.L793
.L792:
	movl	$_Py_FalseStruct, %eax
.L793:
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L794
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L794:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L795
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L795:
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3815:
	.size	_Z8PyJit_IsP7_objectS0_, .-_Z8PyJit_IsP7_objectS0_
	.globl	_Z11PyJit_IsNotP7_objectS0_
	.type	_Z11PyJit_IsNotP7_objectS0_, @function
_Z11PyJit_IsNotP7_objectS0_:
.LFB3816:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	cmpq	-48(%rbp), %rax
	jne	.L798
	movl	$_Py_FalseStruct, %eax
	jmp	.L799
.L798:
	movl	$_Py_TrueStruct, %eax
.L799:
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L800
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L800:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L801
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L801:
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	leaq	1(%rax), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3816:
	.size	_Z11PyJit_IsNotP7_objectS0_, .-_Z11PyJit_IsNotP7_objectS0_
	.globl	_Z13PyJit_Is_BoolP7_objectS0_
	.type	_Z13PyJit_Is_BoolP7_objectS0_, @function
_Z13PyJit_Is_BoolP7_objectS0_:
.LFB3817:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L804
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L804:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L805
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L805:
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3817:
	.size	_Z13PyJit_Is_BoolP7_objectS0_, .-_Z13PyJit_Is_BoolP7_objectS0_
	.globl	_Z16PyJit_IsNot_BoolP7_objectS0_
	.type	_Z16PyJit_IsNot_BoolP7_objectS0_, @function
_Z16PyJit_IsNot_BoolP7_objectS0_:
.LFB3818:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L808
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L808:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L809
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L809:
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3818:
	.size	_Z16PyJit_IsNot_BoolP7_objectS0_, .-_Z16PyJit_IsNot_BoolP7_objectS0_
	.globl	_Z12PyJit_DecRefP7_object
	.type	_Z12PyJit_DecRefP7_object, @function
_Z12PyJit_DecRefP7_object:
.LFB3819:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	jne	.L815
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L811
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L811
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
	jmp	.L811
.L815:
	nop
.L811:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3819:
	.size	_Z12PyJit_DecRefP7_object, .-_Z12PyJit_DecRefP7_object
	.section	.rodata
.LC41:
	.string	"float division by zero"
	.text
	.globl	_Z23PyJit_FloatDivideByZerov
	.type	_Z23PyJit_FloatDivideByZerov, @function
_Z23PyJit_FloatDivideByZerov:
.LFB3820:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	PyExc_ZeroDivisionError(%rip), %rax
	movl	$.LC41, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	nop
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3820:
	.size	_Z23PyJit_FloatDivideByZerov, .-_Z23PyJit_FloatDivideByZerov
	.section	.text._Z11init_numberPml,"axG",@progbits,_Z11init_numberPml,comdat
	.weak	_Z11init_numberPml
	.type	_Z11init_numberPml, @function
_Z11init_numberPml:
.LFB3821:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$16777216, (%rax)
	movq	-8(%rbp), %rax
	movq	$PyLong_Type, 8(%rax)
	movl	$0, -24(%rbp)
	movq	-48(%rbp), %rax
	sarq	$63, %rax
	movq	%rax, %rdx
	xorq	-48(%rbp), %rdx
	subq	%rax, %rdx
	movq	%rdx, %rax
	movq	%rax, -16(%rbp)
	movl	$0, -20(%rbp)
.L820:
	movl	-20(%rbp), %eax
	movslq	%eax, %rcx
	movl	$64, %eax
	addq	$28, %rax
	movabsq	$-8608480567731124087, %rdx
	mulq	%rdx
	movq	%rdx, %rax
	shrq	$4, %rax
	cmpq	%rax, %rcx
	jnb	.L818
	movq	-16(%rbp), %rax
	andl	$1073741823, %eax
	movl	%eax, %ecx
	movq	-8(%rbp), %rax
	movl	-20(%rbp), %edx
	movslq	%edx, %rdx
	addq	$4, %rdx
	movl	%ecx, 8(%rax,%rdx,4)
	sarq	$30, -16(%rbp)
	addl	$1, -24(%rbp)
	cmpq	$0, -16(%rbp)
	je	.L824
	addl	$1, -20(%rbp)
	jmp	.L820
.L824:
	nop
.L818:
	cmpq	$0, -48(%rbp)
	jns	.L821
	movl	-24(%rbp), %eax
	negl	%eax
	cltq
	jmp	.L822
.L821:
	movl	-24(%rbp), %eax
	cltq
.L822:
	movq	-8(%rbp), %rdx
	movq	%rax, 16(%rdx)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3821:
	.size	_Z11init_numberPml, .-_Z11init_numberPml
	.section	.text._Z11safe_returnP7_objectlS0_,"axG",@progbits,_Z11safe_returnP7_objectlS0_,comdat
	.weak	_Z11safe_returnP7_objectlS0_
	.type	_Z11safe_returnP7_objectlS0_, @function
_Z11safe_returnP7_objectlS0_:
.LFB3822:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-8(%rbp), %rax
	jne	.L826
	movq	-16(%rbp), %rax
	jmp	.L827
.L826:
	movq	-24(%rbp), %rax
.L827:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3822:
	.size	_Z11safe_returnP7_objectlS0_, .-_Z11safe_returnP7_objectlS0_
	.section	.text._Z11safe_returnP7_objectlS0_lS0_,"axG",@progbits,_Z11safe_returnP7_objectlS0_lS0_,comdat
	.weak	_Z11safe_returnP7_objectlS0_lS0_
	.type	_Z11safe_returnP7_objectlS0_lS0_, @function
_Z11safe_returnP7_objectlS0_lS0_:
.LFB3823:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$80, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rcx, -64(%rbp)
	movq	%r8, -72(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-72(%rbp), %rax
	cmpq	-40(%rbp), %rax
	jne	.L829
	movq	-48(%rbp), %rax
	jmp	.L830
.L829:
	movq	-72(%rbp), %rax
	cmpq	-56(%rbp), %rax
	jne	.L831
	movq	-64(%rbp), %rax
	jmp	.L830
.L831:
	leaq	-28(%rbp), %rdx
	movq	-72(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyLong_AsLongAndOverflow
	movq	%rax, -24(%rbp)
	movl	-28(%rbp), %eax
	testl	%eax, %eax
	jne	.L832
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	xorl	$1, %eax
	testb	%al, %al
	je	.L833
.L832:
	movl	$1, %eax
	jmp	.L834
.L833:
	movl	$0, %eax
.L834:
	testb	%al, %al
	je	.L835
	movq	-72(%rbp), %rax
	jmp	.L830
.L835:
	movq	-72(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L837
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L837:
	movq	-24(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
.L830:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L838
	call	__stack_chk_fail
.L838:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3823:
	.size	_Z11safe_returnP7_objectlS0_lS0_, .-_Z11safe_returnP7_objectlS0_lS0_
	.section	.text._Z12LongOverflowP7_objectPl,"axG",@progbits,_Z12LongOverflowP7_objectPl,comdat
	.weak	_Z12LongOverflowP7_objectPl
	.type	_Z12LongOverflowP7_objectPl, @function
_Z12LongOverflowP7_objectPl:
.LFB3824:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	leaq	-12(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyLong_AsLongAndOverflow
	movq	%rax, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, (%rax)
	movl	-12(%rbp), %eax
	testl	%eax, %eax
	jne	.L840
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	xorl	$1, %eax
	testb	%al, %al
	je	.L841
.L840:
	movl	$1, %eax
	jmp	.L843
.L841:
	movl	$0, %eax
.L843:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L844
	call	__stack_chk_fail
.L844:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3824:
	.size	_Z12LongOverflowP7_objectPl, .-_Z12LongOverflowP7_objectPl
	.text
	.globl	_Z21PyJit_UnboxInt_TaggedP7_object
	.type	_Z21PyJit_UnboxInt_TaggedP7_object, @function
_Z21PyJit_UnboxInt_TaggedP7_object:
.LFB3825:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	leaq	-20(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyLong_AsLongAndOverflow
	movq	%rax, -16(%rbp)
	movl	-20(%rbp), %eax
	testl	%eax, %eax
	jne	.L846
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	xorl	$1, %eax
	testb	%al, %al
	je	.L847
.L846:
	movl	$1, %eax
	jmp	.L848
.L847:
	movl	$0, %eax
.L848:
	testb	%al, %al
	je	.L849
	movq	-40(%rbp), %rax
	jmp	.L851
.L849:
	movq	-16(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
.L851:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L852
	call	__stack_chk_fail
.L852:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3825:
	.size	_Z21PyJit_UnboxInt_TaggedP7_object, .-_Z21PyJit_UnboxInt_TaggedP7_object
	.section	.text._Z16PyJit_Tagged_Addll,"axG",@progbits,_Z16PyJit_Tagged_Addll,comdat
	.weak	_Z16PyJit_Tagged_Addll
	.type	_Z16PyJit_Tagged_Addll, @function
_Z16PyJit_Tagged_Addll:
.LFB3826:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -248(%rbp)
	movq	%rsi, -256(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$0, %ecx
	movq	-248(%rbp), %rdx
	movq	-256(%rbp), %rax
	addq	%rdx, %rax
	jno	.L854
	movl	$1, %ecx
.L854:
	movq	%rax, -232(%rbp)
	movq	%rcx, %rax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L856
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	testb	%al, %al
	je	.L856
	movq	-232(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L858
.L856:
	movq	-248(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-256(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rdx
	movq	-224(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Add
	movq	%rax, %rdi
	movq	-256(%rbp), %rcx
	movq	-216(%rbp), %rdx
	movq	-248(%rbp), %rsi
	movq	-224(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
.L858:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L859
	call	__stack_chk_fail
.L859:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3826:
	.size	_Z16PyJit_Tagged_Addll, .-_Z16PyJit_Tagged_Addll
	.section	.text._Z21PyJit_Tagged_Subtractll,"axG",@progbits,_Z21PyJit_Tagged_Subtractll,comdat
	.weak	_Z21PyJit_Tagged_Subtractll
	.type	_Z21PyJit_Tagged_Subtractll, @function
_Z21PyJit_Tagged_Subtractll:
.LFB3827:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -248(%rbp)
	movq	%rsi, -256(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$0, %edx
	movq	-248(%rbp), %rax
	subq	-256(%rbp), %rax
	jno	.L861
	movl	$1, %edx
.L861:
	movq	%rax, -232(%rbp)
	movq	%rdx, %rax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L863
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	testb	%al, %al
	je	.L863
	movq	-232(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L865
.L863:
	movq	-248(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-256(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rdx
	movq	-224(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Subtract
	movq	%rax, %rdi
	movq	-256(%rbp), %rcx
	movq	-216(%rbp), %rdx
	movq	-248(%rbp), %rsi
	movq	-224(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
.L865:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L866
	call	__stack_chk_fail
.L866:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3827:
	.size	_Z21PyJit_Tagged_Subtractll, .-_Z21PyJit_Tagged_Subtractll
	.section	.text._Z21PyJit_Tagged_Multiplyll,"axG",@progbits,_Z21PyJit_Tagged_Multiplyll,comdat
	.weak	_Z21PyJit_Tagged_Multiplyll
	.type	_Z21PyJit_Tagged_Multiplyll, @function
_Z21PyJit_Tagged_Multiplyll:
.LFB3828:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -248(%rbp)
	movq	%rsi, -256(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$0, %edx
	movq	-248(%rbp), %rax
	imulq	-256(%rbp), %rax
	jno	.L868
	movl	$1, %edx
.L868:
	movq	%rax, -232(%rbp)
	movq	%rdx, %rax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L870
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	testb	%al, %al
	je	.L871
	movq	-232(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L873
.L871:
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	PyLong_FromLongLong
	jmp	.L873
.L870:
	movq	-248(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-256(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rdx
	movq	-224(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Multiply
	movq	%rax, %rdi
	movq	-256(%rbp), %rcx
	movq	-216(%rbp), %rdx
	movq	-248(%rbp), %rsi
	movq	-224(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
.L873:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L874
	call	__stack_chk_fail
.L874:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3828:
	.size	_Z21PyJit_Tagged_Multiplyll, .-_Z21PyJit_Tagged_Multiplyll
	.section	.rodata
.LC42:
	.string	"division by zero"
	.section	.text._Z19PyJit_Tagged_Moduloll,"axG",@progbits,_Z19PyJit_Tagged_Moduloll,comdat
	.weak	_Z19PyJit_Tagged_Moduloll
	.type	_Z19PyJit_Tagged_Moduloll, @function
_Z19PyJit_Tagged_Moduloll:
.LFB3829:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -248(%rbp)
	movq	%rsi, -256(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	cmpq	$0, -256(%rbp)
	jne	.L876
	movq	PyExc_ZeroDivisionError(%rip), %rax
	movl	$.LC42, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L880
.L876:
	cmpq	$0, -256(%rbp)
	jle	.L878
	cmpq	$0, -248(%rbp)
	jle	.L878
	movq	-248(%rbp), %rax
	cqto
	idivq	-256(%rbp)
	movq	%rdx, -232(%rbp)
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	testb	%al, %al
	je	.L879
	movq	-232(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L880
.L879:
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	PyLong_FromLong
	jmp	.L880
.L878:
	movq	-248(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-256(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rdx
	movq	-224(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Remainder
	movq	%rax, %rdi
	movq	-256(%rbp), %rcx
	movq	-216(%rbp), %rdx
	movq	-248(%rbp), %rsi
	movq	-224(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
.L880:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L881
	call	__stack_chk_fail
.L881:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3829:
	.size	_Z19PyJit_Tagged_Moduloll, .-_Z19PyJit_Tagged_Moduloll
	.section	.text._Z23PyJit_Tagged_TrueDividell,"axG",@progbits,_Z23PyJit_Tagged_TrueDividell,comdat
	.weak	_Z23PyJit_Tagged_TrueDividell
	.type	_Z23PyJit_Tagged_TrueDividell, @function
_Z23PyJit_Tagged_TrueDividell:
.LFB3830:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L883
	movq	PyExc_ZeroDivisionError(%rip), %rax
	movl	$.LC42, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L884
.L883:
	pxor	%xmm0, %xmm0
	cvtsi2sdq	-24(%rbp), %xmm0
	movsd	%xmm0, -16(%rbp)
	pxor	%xmm0, %xmm0
	cvtsi2sdq	-32(%rbp), %xmm0
	movsd	%xmm0, -8(%rbp)
	movsd	-16(%rbp), %xmm0
	divsd	-8(%rbp), %xmm0
	call	PyFloat_FromDouble
.L884:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3830:
	.size	_Z23PyJit_Tagged_TrueDividell, .-_Z23PyJit_Tagged_TrueDividell
	.section	.text._Z24PyJit_Tagged_FloorDividell,"axG",@progbits,_Z24PyJit_Tagged_FloorDividell,comdat
	.weak	_Z24PyJit_Tagged_FloorDividell
	.type	_Z24PyJit_Tagged_FloorDividell, @function
_Z24PyJit_Tagged_FloorDividell:
.LFB3831:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -248(%rbp)
	movq	%rsi, -256(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	cmpq	$0, -256(%rbp)
	jne	.L886
	movq	PyExc_ZeroDivisionError(%rip), %rax
	movl	$.LC42, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L891
.L886:
	movabsq	$-9223372036854775808, %rax
	cmpq	%rax, -248(%rbp)
	jne	.L888
	cmpq	$-1, -256(%rbp)
	je	.L889
.L888:
	movq	-248(%rbp), %rax
	cqto
	idivq	-256(%rbp)
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	testb	%al, %al
	je	.L890
	movq	-216(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L891
.L890:
	movq	-216(%rbp), %rax
	movq	%rax, %rdi
	call	PyLong_FromLong
	jmp	.L891
.L889:
	movq	-248(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -232(%rbp)
	movq	-256(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-224(%rbp), %rdx
	movq	-232(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_FloorDivide
	movq	%rax, %rdi
	movq	-256(%rbp), %rcx
	movq	-224(%rbp), %rdx
	movq	-248(%rbp), %rsi
	movq	-232(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
.L891:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L892
	call	__stack_chk_fail
.L892:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3831:
	.size	_Z24PyJit_Tagged_FloorDividell, .-_Z24PyJit_Tagged_FloorDividell
	.section	.rodata
.LC43:
	.string	"negative shift count"
	.section	.text._Z25PyJit_Tagged_BinaryLShiftll,"axG",@progbits,_Z25PyJit_Tagged_BinaryLShiftll,comdat
	.weak	_Z25PyJit_Tagged_BinaryLShiftll
	.type	_Z25PyJit_Tagged_BinaryLShiftll, @function
_Z25PyJit_Tagged_BinaryLShiftll:
.LFB3832:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$256, %rsp
	movq	%rdi, -248(%rbp)
	movq	%rsi, -256(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	cmpq	$0, -256(%rbp)
	jns	.L894
	movq	PyExc_ValueError(%rip), %rax
	movl	$.LC43, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L901
.L894:
	cmpq	$0, -248(%rbp)
	jne	.L896
	movl	$1, %eax
	jmp	.L901
.L896:
	movl	$64, %eax
	leaq	-1(%rax), %rdx
	movq	-256(%rbp), %rax
	cmpq	%rax, %rdx
	jbe	.L897
	cmpq	$0, -248(%rbp)
	jle	.L897
	movq	-256(%rbp), %rax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	negl	%eax
	cltq
	andq	-248(%rbp), %rax
	testq	%rax, %rax
	jne	.L897
	movq	-256(%rbp), %rax
	movl	%eax, %edx
	movq	-248(%rbp), %rax
	movl	%edx, %ecx
	salq	%cl, %rax
	movq	%rax, -232(%rbp)
	movq	-232(%rbp), %rax
	movq	%rax, %rdi
	call	_Z7can_tagl
	testb	%al, %al
	je	.L897
	movq	-232(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L901
.L897:
	movq	-248(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-256(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rdx
	movq	-224(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Lshift
	movq	%rax, %rdi
	movq	-256(%rbp), %rcx
	movq	-216(%rbp), %rdx
	movq	-248(%rbp), %rsi
	movq	-224(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
.L901:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L902
	call	__stack_chk_fail
.L902:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3832:
	.size	_Z25PyJit_Tagged_BinaryLShiftll, .-_Z25PyJit_Tagged_BinaryLShiftll
	.section	.text._Z25PyJit_Tagged_BinaryRShiftll,"axG",@progbits,_Z25PyJit_Tagged_BinaryRShiftll,comdat
	.weak	_Z25PyJit_Tagged_BinaryRShiftll
	.type	_Z25PyJit_Tagged_BinaryRShiftll, @function
_Z25PyJit_Tagged_BinaryRShiftll:
.LFB3833:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	.L904
	movq	PyExc_ValueError(%rip), %rax
	movl	$.LC43, %esi
	movq	%rax, %rdi
	call	PyErr_SetString
	movl	$0, %eax
	jmp	.L905
.L904:
	movq	-16(%rbp), %rax
	movl	%eax, %edx
	movq	-8(%rbp), %rax
	movl	%edx, %ecx
	sarq	%cl, %rax
	addq	%rax, %rax
	orq	$1, %rax
.L905:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3833:
	.size	_Z25PyJit_Tagged_BinaryRShiftll, .-_Z25PyJit_Tagged_BinaryRShiftll
	.section	.text._Z22PyJit_Tagged_BinaryAndll,"axG",@progbits,_Z22PyJit_Tagged_BinaryAndll,comdat
	.weak	_Z22PyJit_Tagged_BinaryAndll
	.type	_Z22PyJit_Tagged_BinaryAndll, @function
_Z22PyJit_Tagged_BinaryAndll:
.LFB3834:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	andq	-16(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3834:
	.size	_Z22PyJit_Tagged_BinaryAndll, .-_Z22PyJit_Tagged_BinaryAndll
	.section	.text._Z21PyJit_Tagged_BinaryOrll,"axG",@progbits,_Z21PyJit_Tagged_BinaryOrll,comdat
	.weak	_Z21PyJit_Tagged_BinaryOrll
	.type	_Z21PyJit_Tagged_BinaryOrll, @function
_Z21PyJit_Tagged_BinaryOrll:
.LFB3835:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	orq	-16(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3835:
	.size	_Z21PyJit_Tagged_BinaryOrll, .-_Z21PyJit_Tagged_BinaryOrll
	.section	.text._Z22PyJit_Tagged_BinaryXorll,"axG",@progbits,_Z22PyJit_Tagged_BinaryXorll,comdat
	.weak	_Z22PyJit_Tagged_BinaryXorll
	.type	_Z22PyJit_Tagged_BinaryXorll, @function
_Z22PyJit_Tagged_BinaryXorll:
.LFB3836:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	xorq	-16(%rbp), %rax
	addq	%rax, %rax
	orq	$1, %rax
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3836:
	.size	_Z22PyJit_Tagged_BinaryXorll, .-_Z22PyJit_Tagged_BinaryXorll
	.section	.text._Z18PyJit_Tagged_Powerll,"axG",@progbits,_Z18PyJit_Tagged_Powerll,comdat
	.weak	_Z18PyJit_Tagged_Powerll
	.type	_Z18PyJit_Tagged_Powerll, @function
_Z18PyJit_Tagged_Powerll:
.LFB3837:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$240, %rsp
	movq	%rdi, -232(%rbp)
	movq	%rsi, -240(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-232(%rbp), %rdx
	leaq	-208(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -224(%rbp)
	movq	-240(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rcx
	movq	-224(%rbp), %rax
	movl	$_Py_NoneStruct, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	PyNumber_Power
	movq	%rax, %rdi
	movq	-240(%rbp), %rcx
	movq	-216(%rbp), %rdx
	movq	-232(%rbp), %rsi
	movq	-224(%rbp), %rax
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_lS0_
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L914
	call	__stack_chk_fail
.L914:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3837:
	.size	_Z18PyJit_Tagged_Powerll, .-_Z18PyJit_Tagged_Powerll
	.text
	.globl	_Z22PyJit_BoxTaggedPointerP7_object
	.type	_Z22PyJit_BoxTaggedPointerP7_object, @function
_Z22PyJit_BoxTaggedPointerP7_object:
.LFB3838:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L916
	movq	-8(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdi
	call	PyLong_FromLong
	jmp	.L917
.L916:
	movq	-24(%rbp), %rax
.L917:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3838:
	.size	_Z22PyJit_BoxTaggedPointerP7_object, .-_Z22PyJit_BoxTaggedPointerP7_object
	.globl	_Z13PyJit_Add_IntP7_objectS0_
	.type	_Z13PyJit_Add_IntP7_objectS0_, @function
_Z13PyJit_Add_IntP7_objectS0_:
.LFB3839:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L919
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L920
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z16PyJit_Tagged_Addll
	jmp	.L927
.L920:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L922
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L923
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L923:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z16PyJit_Tagged_Addll
	jmp	.L927
.L922:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z9PyJit_AddP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L927
.L919:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L924
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L925
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L926
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L926:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z16PyJit_Tagged_Addll
	jmp	.L927
.L925:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z9PyJit_AddP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L927
.L924:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z9PyJit_AddP7_objectS0_
.L927:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L928
	call	__stack_chk_fail
.L928:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3839:
	.size	_Z13PyJit_Add_IntP7_objectS0_, .-_Z13PyJit_Add_IntP7_objectS0_
	.globl	_Z18PyJit_Subtract_IntP7_objectS0_
	.type	_Z18PyJit_Subtract_IntP7_objectS0_, @function
_Z18PyJit_Subtract_IntP7_objectS0_:
.LFB3840:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L930
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L931
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_Tagged_Subtractll
	jmp	.L938
.L931:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L933
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L934
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L934:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z21PyJit_Tagged_Subtractll
	jmp	.L938
.L933:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_SubtractP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L938
.L930:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L935
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L936
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L937
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L937:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_Tagged_Subtractll
	jmp	.L938
.L936:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_SubtractP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L938
.L935:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_SubtractP7_objectS0_
.L938:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L939
	call	__stack_chk_fail
.L939:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3840:
	.size	_Z18PyJit_Subtract_IntP7_objectS0_, .-_Z18PyJit_Subtract_IntP7_objectS0_
	.globl	_Z19PyJit_BinaryAnd_IntP7_objectS0_
	.type	_Z19PyJit_BinaryAnd_IntP7_objectS0_, @function
_Z19PyJit_BinaryAnd_IntP7_objectS0_:
.LFB3841:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L941
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L942
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z22PyJit_Tagged_BinaryAndll
	jmp	.L949
.L942:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L944
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L945
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L945:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z22PyJit_Tagged_BinaryAndll
	jmp	.L949
.L944:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15PyJit_BinaryAndP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L949
.L941:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L946
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L947
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L948
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L948:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z22PyJit_Tagged_BinaryAndll
	jmp	.L949
.L947:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15PyJit_BinaryAndP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L949
.L946:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15PyJit_BinaryAndP7_objectS0_
.L949:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L950
	call	__stack_chk_fail
.L950:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3841:
	.size	_Z19PyJit_BinaryAnd_IntP7_objectS0_, .-_Z19PyJit_BinaryAnd_IntP7_objectS0_
	.globl	_Z18PyJit_BinaryOr_IntP7_objectS0_
	.type	_Z18PyJit_BinaryOr_IntP7_objectS0_, @function
_Z18PyJit_BinaryOr_IntP7_objectS0_:
.LFB3842:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L952
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L953
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_Tagged_BinaryOrll
	jmp	.L960
.L953:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L955
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L956
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L956:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z21PyJit_Tagged_BinaryOrll
	jmp	.L960
.L955:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_BinaryOrP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L960
.L952:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L957
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L958
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L959
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L959:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_Tagged_BinaryOrll
	jmp	.L960
.L958:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_BinaryOrP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L960
.L957:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_BinaryOrP7_objectS0_
.L960:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L961
	call	__stack_chk_fail
.L961:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3842:
	.size	_Z18PyJit_BinaryOr_IntP7_objectS0_, .-_Z18PyJit_BinaryOr_IntP7_objectS0_
	.globl	_Z19PyJit_BinaryXor_IntP7_objectS0_
	.type	_Z19PyJit_BinaryXor_IntP7_objectS0_, @function
_Z19PyJit_BinaryXor_IntP7_objectS0_:
.LFB3843:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L963
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L964
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z22PyJit_Tagged_BinaryXorll
	jmp	.L971
.L964:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L966
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L967
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L967:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z22PyJit_Tagged_BinaryXorll
	jmp	.L971
.L966:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15PyJit_BinaryXorP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L971
.L963:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L968
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L969
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L970
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L970:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z22PyJit_Tagged_BinaryXorll
	jmp	.L971
.L969:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15PyJit_BinaryXorP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L971
.L968:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z15PyJit_BinaryXorP7_objectS0_
.L971:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L972
	call	__stack_chk_fail
.L972:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3843:
	.size	_Z19PyJit_BinaryXor_IntP7_objectS0_, .-_Z19PyJit_BinaryXor_IntP7_objectS0_
	.globl	_Z18PyJit_Multiply_IntP7_objectS0_
	.type	_Z18PyJit_Multiply_IntP7_objectS0_, @function
_Z18PyJit_Multiply_IntP7_objectS0_:
.LFB3844:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L974
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L975
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_Tagged_Multiplyll
	jmp	.L982
.L975:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L977
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L978
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L978:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z21PyJit_Tagged_Multiplyll
	jmp	.L982
.L977:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_MultiplyP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L982
.L974:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L979
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L980
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L981
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L981:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z21PyJit_Tagged_Multiplyll
	jmp	.L982
.L980:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_MultiplyP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L982
.L979:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z14PyJit_MultiplyP7_objectS0_
.L982:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L983
	call	__stack_chk_fail
.L983:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3844:
	.size	_Z18PyJit_Multiply_IntP7_objectS0_, .-_Z18PyJit_Multiply_IntP7_objectS0_
	.globl	_Z16PyJit_Modulo_IntP7_objectS0_
	.type	_Z16PyJit_Modulo_IntP7_objectS0_, @function
_Z16PyJit_Modulo_IntP7_objectS0_:
.LFB3845:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L985
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L986
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z19PyJit_Tagged_Moduloll
	jmp	.L993
.L986:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L988
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L989
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L989:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z19PyJit_Tagged_Moduloll
	jmp	.L993
.L988:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12PyJit_ModuloP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L993
.L985:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L990
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L991
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L992
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L992:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z19PyJit_Tagged_Moduloll
	jmp	.L993
.L991:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12PyJit_ModuloP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L993
.L990:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12PyJit_ModuloP7_objectS0_
.L993:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L994
	call	__stack_chk_fail
.L994:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3845:
	.size	_Z16PyJit_Modulo_IntP7_objectS0_, .-_Z16PyJit_Modulo_IntP7_objectS0_
	.globl	_Z20PyJit_TrueDivide_IntP7_objectS0_
	.type	_Z20PyJit_TrueDivide_IntP7_objectS0_, @function
_Z20PyJit_TrueDivide_IntP7_objectS0_:
.LFB3846:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L996
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L997
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z23PyJit_Tagged_TrueDividell
	jmp	.L1004
.L997:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L999
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1000
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1000:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z23PyJit_Tagged_TrueDividell
	jmp	.L1004
.L999:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z16PyJit_TrueDivideP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1004
.L996:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1001
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1002
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1003
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1003:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z23PyJit_Tagged_TrueDividell
	jmp	.L1004
.L1002:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z16PyJit_TrueDivideP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1004
.L1001:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z16PyJit_TrueDivideP7_objectS0_
.L1004:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1005
	call	__stack_chk_fail
.L1005:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3846:
	.size	_Z20PyJit_TrueDivide_IntP7_objectS0_, .-_Z20PyJit_TrueDivide_IntP7_objectS0_
	.globl	_Z21PyJit_FloorDivide_IntP7_objectS0_
	.type	_Z21PyJit_FloorDivide_IntP7_objectS0_, @function
_Z21PyJit_FloorDivide_IntP7_objectS0_:
.LFB3847:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1007
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1008
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z24PyJit_Tagged_FloorDividell
	jmp	.L1015
.L1008:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1010
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1011
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1011:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z24PyJit_Tagged_FloorDividell
	jmp	.L1015
.L1010:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z17PyJit_FloorDivideP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1015
.L1007:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1012
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1013
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1014
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1014:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z24PyJit_Tagged_FloorDividell
	jmp	.L1015
.L1013:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z17PyJit_FloorDivideP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1015
.L1012:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z17PyJit_FloorDivideP7_objectS0_
.L1015:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1016
	call	__stack_chk_fail
.L1016:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3847:
	.size	_Z21PyJit_FloorDivide_IntP7_objectS0_, .-_Z21PyJit_FloorDivide_IntP7_objectS0_
	.globl	_Z22PyJit_BinaryLShift_IntP7_objectS0_
	.type	_Z22PyJit_BinaryLShift_IntP7_objectS0_, @function
_Z22PyJit_BinaryLShift_IntP7_objectS0_:
.LFB3848:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1018
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1019
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z25PyJit_Tagged_BinaryLShiftll
	jmp	.L1026
.L1019:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1021
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1022
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1022:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z25PyJit_Tagged_BinaryLShiftll
	jmp	.L1026
.L1021:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_BinaryLShiftP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1026
.L1018:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1023
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1024
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1025
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1025:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z25PyJit_Tagged_BinaryLShiftll
	jmp	.L1026
.L1024:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_BinaryLShiftP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1026
.L1023:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_BinaryLShiftP7_objectS0_
.L1026:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1027
	call	__stack_chk_fail
.L1027:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3848:
	.size	_Z22PyJit_BinaryLShift_IntP7_objectS0_, .-_Z22PyJit_BinaryLShift_IntP7_objectS0_
	.globl	_Z22PyJit_BinaryRShift_IntP7_objectS0_
	.type	_Z22PyJit_BinaryRShift_IntP7_objectS0_, @function
_Z22PyJit_BinaryRShift_IntP7_objectS0_:
.LFB3849:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1029
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1030
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z25PyJit_Tagged_BinaryRShiftll
	jmp	.L1037
.L1030:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1032
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1033
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1033:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z25PyJit_Tagged_BinaryRShiftll
	jmp	.L1037
.L1032:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_BinaryRShiftP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1037
.L1029:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1034
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1035
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1036
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1036:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z25PyJit_Tagged_BinaryRShiftll
	jmp	.L1037
.L1035:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_BinaryRShiftP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1037
.L1034:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_BinaryRShiftP7_objectS0_
.L1037:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1038
	call	__stack_chk_fail
.L1038:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3849:
	.size	_Z22PyJit_BinaryRShift_IntP7_objectS0_, .-_Z22PyJit_BinaryRShift_IntP7_objectS0_
	.globl	_Z15PyJit_Power_IntP7_objectS0_
	.type	_Z15PyJit_Power_IntP7_objectS0_, @function
_Z15PyJit_Power_IntP7_objectS0_:
.LFB3850:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1040
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1041
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_Tagged_Powerll
	jmp	.L1048
.L1041:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1043
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1044
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1044:
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rdx
	sarq	%rdx
	movq	%rax, %rsi
	movq	%rdx, %rdi
	call	_Z18PyJit_Tagged_Powerll
	jmp	.L1048
.L1043:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11PyJit_PowerP7_objectS0_
	movq	%rax, %rdx
	movq	-144(%rbp), %rcx
	movq	-152(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1048
.L1040:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1045
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1046
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1047
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1047:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z18PyJit_Tagged_Powerll
	jmp	.L1048
.L1046:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11PyJit_PowerP7_objectS0_
	movq	%rax, %rdx
	movq	-136(%rbp), %rcx
	movq	-160(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_Z11safe_returnP7_objectlS0_
	jmp	.L1048
.L1045:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11PyJit_PowerP7_objectS0_
.L1048:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1049
	call	__stack_chk_fail
.L1049:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3850:
	.size	_Z15PyJit_Power_IntP7_objectS0_, .-_Z15PyJit_Power_IntP7_objectS0_
	.globl	_Z16PyJit_Equals_IntP7_objectS0_
	.type	_Z16PyJit_Equals_IntP7_objectS0_, @function
_Z16PyJit_Equals_IntP7_objectS0_:
.LFB3851:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1051
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1052
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	sarq	%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	jmp	.L1059
.L1052:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1054
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1055
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1055:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	jmp	.L1059
.L1054:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	jmp	.L1056
.L1051:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1056
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1057
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1058
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1058:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	jmp	.L1059
.L1057:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
.L1056:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
.L1059:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1060
	call	__stack_chk_fail
.L1060:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3851:
	.size	_Z16PyJit_Equals_IntP7_objectS0_, .-_Z16PyJit_Equals_IntP7_objectS0_
	.globl	_Z19PyJit_NotEquals_IntP7_objectS0_
	.type	_Z19PyJit_NotEquals_IntP7_objectS0_, @function
_Z19PyJit_NotEquals_IntP7_objectS0_:
.LFB3852:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1062
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1063
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	sarq	%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	jmp	.L1070
.L1063:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1065
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1066
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1066:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	jmp	.L1070
.L1065:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	jmp	.L1067
.L1062:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1067
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1068
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1069
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1069:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	jmp	.L1070
.L1068:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
.L1067:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
.L1070:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1071
	call	__stack_chk_fail
.L1071:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3852:
	.size	_Z19PyJit_NotEquals_IntP7_objectS0_, .-_Z19PyJit_NotEquals_IntP7_objectS0_
	.globl	_Z21PyJit_GreaterThan_IntP7_objectS0_
	.type	_Z21PyJit_GreaterThan_IntP7_objectS0_, @function
_Z21PyJit_GreaterThan_IntP7_objectS0_:
.LFB3853:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1073
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1074
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	sarq	%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	jmp	.L1081
.L1074:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1076
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1077
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1077:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	jmp	.L1081
.L1076:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	jmp	.L1078
.L1073:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1078
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1079
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1080
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1080:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	jmp	.L1081
.L1079:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
.L1078:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	testl	%eax, %eax
	setg	%al
	movzbl	%al, %eax
.L1081:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1082
	call	__stack_chk_fail
.L1082:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3853:
	.size	_Z21PyJit_GreaterThan_IntP7_objectS0_, .-_Z21PyJit_GreaterThan_IntP7_objectS0_
	.globl	_Z18PyJit_LessThan_IntP7_objectS0_
	.type	_Z18PyJit_LessThan_IntP7_objectS0_, @function
_Z18PyJit_LessThan_IntP7_objectS0_:
.LFB3854:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1084
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1085
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	sarq	%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	jmp	.L1092
.L1085:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1087
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1088
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1088:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	jmp	.L1092
.L1087:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	jmp	.L1089
.L1084:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1089
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1090
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1091
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1091:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	jmp	.L1092
.L1090:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
.L1089:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	shrl	$31, %eax
	movzbl	%al, %eax
.L1092:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1093
	call	__stack_chk_fail
.L1093:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3854:
	.size	_Z18PyJit_LessThan_IntP7_objectS0_, .-_Z18PyJit_LessThan_IntP7_objectS0_
	.globl	_Z27PyJit_GreaterThanEquals_IntP7_objectS0_
	.type	_Z27PyJit_GreaterThanEquals_IntP7_objectS0_, @function
_Z27PyJit_GreaterThanEquals_IntP7_objectS0_:
.LFB3855:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1095
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1096
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	sarq	%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	jmp	.L1103
.L1096:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1098
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1099
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1099:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	jmp	.L1103
.L1098:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	jmp	.L1100
.L1095:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1100
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1101
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1102
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1102:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	jmp	.L1103
.L1101:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
.L1100:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	notl	%eax
	shrl	$31, %eax
	movzbl	%al, %eax
.L1103:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1104
	call	__stack_chk_fail
.L1104:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3855:
	.size	_Z27PyJit_GreaterThanEquals_IntP7_objectS0_, .-_Z27PyJit_GreaterThanEquals_IntP7_objectS0_
	.globl	_Z24PyJit_LessThanEquals_IntP7_objectS0_
	.type	_Z24PyJit_LessThanEquals_IntP7_objectS0_, @function
_Z24PyJit_LessThanEquals_IntP7_objectS0_:
.LFB3856:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)
	movq	%rsi, -160(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-152(%rbp), %rax
	movq	%rax, -144(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -136(%rbp)
	movq	-144(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1106
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1107
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	sarq	%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	jmp	.L1114
.L1107:
	leaq	-136(%rbp), %rdx
	movq	-160(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1109
	movq	-160(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-128(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-128(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1110
	movq	-128(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-128(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1110:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-136(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	jmp	.L1114
.L1109:
	movq	-144(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -152(%rbp)
	jmp	.L1111
.L1106:
	movq	-136(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1111
	leaq	-144(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z12LongOverflowP7_objectPl
	xorl	$1, %eax
	testb	%al, %al
	je	.L1112
	movq	-152(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-120(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-120(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1113
	movq	-120(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-120(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1113:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	movq	-144(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	jmp	.L1114
.L1112:
	movq	-136(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -160(%rbp)
.L1111:
	movq	-160(%rbp), %rdx
	movq	-152(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_ZL12long_compareP11_longobjectS0_
	testl	%eax, %eax
	setle	%al
	movzbl	%al, %eax
.L1114:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1115
	call	__stack_chk_fail
.L1115:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3856:
	.size	_Z24PyJit_LessThanEquals_IntP7_objectS0_, .-_Z24PyJit_LessThanEquals_IntP7_objectS0_
	.globl	_Z23PyJit_UnaryNegative_IntP7_object
	.type	_Z23PyJit_UnaryNegative_IntP7_object, @function
_Z23PyJit_UnaryNegative_IntP7_object:
.LFB3857:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$144, %rsp
	movq	%rdi, -136(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-136(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1117
	movq	-128(%rbp), %rax
	sarq	%rax
	movq	%rax, -120(%rbp)
	movabsq	$4611686018427387904, %rax
	negq	%rax
	cmpq	-120(%rbp), %rax
	je	.L1118
	movq	-120(%rbp), %rax
	negq	%rax
	addq	%rax, %rax
	orq	$1, %rax
	jmp	.L1120
.L1118:
	movq	-120(%rbp), %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -136(%rbp)
.L1117:
	movq	-136(%rbp), %rax
	movq	%rax, %rdi
	call	PyNumber_Negative
.L1120:
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1121
	call	__stack_chk_fail
.L1121:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3857:
	.size	_Z23PyJit_UnaryNegative_IntP7_object, .-_Z23PyJit_UnaryNegative_IntP7_object
	.globl	_Z27PyJit_UnaryNot_Int_PushBoolP7_object
	.type	_Z27PyJit_UnaryNot_Int_PushBoolP7_object, @function
_Z27PyJit_UnaryNot_Int_PushBoolP7_object:
.LFB3858:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1123
	movq	-16(%rbp), %rax
	sarq	%rax
	movq	%rax, -8(%rbp)
	cmpq	$0, -8(%rbp)
	sete	%al
	movzbl	%al, %eax
	jmp	.L1124
.L1123:
	movq	-24(%rbp), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	sete	%al
	movzbl	%al, %eax
.L1124:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3858:
	.size	_Z27PyJit_UnaryNot_Int_PushBoolP7_object, .-_Z27PyJit_UnaryNot_Int_PushBoolP7_object
	.globl	_Z17PyJit_Int_ToFloatP7_objectPd
	.type	_Z17PyJit_Int_ToFloatP7_objectPd, @function
_Z17PyJit_Int_ToFloatP7_objectPd:
.LFB3859:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$144, %rsp
	movq	%rdi, -136(%rbp)
	movq	%rsi, -144(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movq	-136(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	andl	$1, %eax
	testq	%rax, %rax
	je	.L1126
	movq	-128(%rbp), %rax
	sarq	%rax
	movq	%rax, %rdx
	leaq	-112(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	_Z11init_numberPml
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rdi
	call	PyLong_AsDouble
	movq	%xmm0, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, (%rax)
	jmp	.L1127
.L1126:
	movq	-136(%rbp), %rax
	movq	%rax, %rdi
	call	PyLong_AsDouble
	movq	%xmm0, %rdx
	movq	-144(%rbp), %rax
	movq	%rdx, (%rax)
.L1127:
	movq	-144(%rbp), %rax
	movsd	(%rax), %xmm0
	movsd	.LC44(%rip), %xmm1
	ucomisd	%xmm1, %xmm0
	jp	.L1128
	movsd	.LC44(%rip), %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.L1128
	call	PyErr_Occurred
	testq	%rax, %rax
	je	.L1128
	movl	$1, %eax
	jmp	.L1130
.L1128:
	movl	$0, %eax
.L1130:
	movzbl	%al, %eax
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L1132
	call	__stack_chk_fail
.L1132:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3859:
	.size	_Z17PyJit_Int_ToFloatP7_objectPd, .-_Z17PyJit_Int_ToFloatP7_objectPd
	.local	_ZL9g_counter
	.comm	_ZL9g_counter,4,4
	.globl	_Z19_PyJit_PeriodicWorkv
	.type	_Z19_PyJit_PeriodicWorkv, @function
_Z19_PyJit_PeriodicWorkv:
.LFB3860:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	_ZL9g_counter(%rip), %eax
	addl	$1, %eax
	movl	%eax, _ZL9g_counter(%rip)
	movl	_ZL9g_counter(%rip), %eax
	andl	$4095, %eax
	testl	%eax, %eax
	jne	.L1135
	movl	$0, _ZL9g_counter(%rip)
	call	PyEval_SaveThread
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	PyEval_RestoreThread
.L1135:
	movl	_ZL9g_counter(%rip), %eax
	movzwl	%ax, %eax
	testl	%eax, %eax
	jne	.L1136
	call	PyThreadState_Get
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	144(%rax), %rax
	testq	%rax, %rax
	je	.L1137
	movq	-16(%rbp), %rax
	movq	144(%rax), %rax
	movq	%rax, %rdi
	call	PyErr_SetNone
	movq	-16(%rbp), %rax
	movq	144(%rax), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1138
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1138:
	movq	-16(%rbp), %rax
	movq	$0, 144(%rax)
	movl	$-1, %eax
	jmp	.L1139
.L1137:
	call	Py_MakePendingCalls
	jmp	.L1139
.L1136:
	movl	$0, %eax
.L1139:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3860:
	.size	_Z19_PyJit_PeriodicWorkv, .-_Z19_PyJit_PeriodicWorkv
	.globl	_Z22PyJit_UnicodeJoinArrayPP7_objectl
	.type	_Z22PyJit_UnicodeJoinArrayPP7_objectl, @function
_Z22PyJit_UnicodeJoinArrayPP7_objectl:
.LFB3861:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movl	$0, %esi
	movl	$0, %edi
	call	PyUnicode_New
	movq	%rax, -32(%rbp)
	movq	-64(%rbp), %rdx
	movq	-56(%rbp), %rcx
	movq	-32(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_PyUnicode_JoinArray
	movq	%rax, -24(%rbp)
	movl	$0, -36(%rbp)
.L1143:
	movl	-36(%rbp), %eax
	cltq
	cmpq	-64(%rbp), %rax
	jge	.L1141
	movl	-36(%rbp), %eax
	cltq
	leaq	0(,%rax,8), %rdx
	movq	-56(%rbp), %rax
	addq	%rdx, %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1142
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1142:
	addl	$1, -36(%rbp)
	jmp	.L1143
.L1141:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1144
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1144:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3861:
	.size	_Z22PyJit_UnicodeJoinArrayPP7_objectl, .-_Z22PyJit_UnicodeJoinArrayPP7_objectl
	.globl	_Z18PyJit_FormatObjectP7_objectS0_
	.type	_Z18PyJit_FormatObjectP7_objectS0_, @function
_Z18PyJit_FormatObjectP7_objectS0_:
.LFB3862:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	PyObject_Format
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1147
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-16(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1147:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1148
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1148:
	movq	-24(%rbp), %rax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3862:
	.size	_Z18PyJit_FormatObjectP7_objectS0_, .-_Z18PyJit_FormatObjectP7_objectS0_
	.globl	_Z17PyJit_FormatValueP7_object
	.type	_Z17PyJit_FormatValueP7_object, @function
_Z17PyJit_FormatValueP7_object:
.LFB3863:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	cmpq	$PyUnicode_Type, %rax
	jne	.L1151
	movq	-24(%rbp), %rax
	jmp	.L1152
.L1151:
	movq	-24(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	call	PyObject_Format
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	leaq	-1(%rax), %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	setne	%al
	testb	%al, %al
	jne	.L1153
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	48(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	call	*%rax
.L1153:
	movq	-16(%rbp), %rax
.L1152:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3863:
	.size	_Z17PyJit_FormatValueP7_object, .-_Z17PyJit_FormatValueP7_object
	.section	.rodata
	.align 32
	.type	_ZZ15PyJit_UpdateSetP7_objectS0_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ15PyJit_UpdateSetP7_objectS0_E19__PRETTY_FUNCTION__, 42
_ZZ15PyJit_UpdateSetP7_objectS0_E19__PRETTY_FUNCTION__:
	.string	"int PyJit_UpdateSet(PyObject*, PyObject*)"
.LC45:
	.string	"displayhook"
	.data
	.align 16
	.type	_ZZ15PyJit_PrintExprP7_objectE16PyId_displayhook, @object
	.size	_ZZ15PyJit_PrintExprP7_objectE16PyId_displayhook, 24
_ZZ15PyJit_PrintExprP7_objectE16PyId_displayhook:
	.quad	0
	.quad	.LC45
	.quad	0
	.section	.rodata
	.align 32
	.type	_ZZ22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_E19__PRETTY_FUNCTION__, 100
_ZZ22PyJit_PrepareExceptionPP7_objectS1_S1_S1_S1_S1_E19__PRETTY_FUNCTION__:
	.string	"void PyJit_PrepareException(PyObject**, PyObject**, PyObject**, PyObject**, PyObject**, PyObject**)"
	.align 32
	.type	_ZZ14PyJit_UnwindEhP7_objectS0_S0_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ14PyJit_UnwindEhP7_objectS0_S0_E19__PRETTY_FUNCTION__, 53
_ZZ14PyJit_UnwindEhP7_objectS0_S0_E19__PRETTY_FUNCTION__:
	.string	"void PyJit_UnwindEh(PyObject*, PyObject*, PyObject*)"
.LC46:
	.string	"__import__"
	.data
	.align 16
	.type	_ZZ16PyJit_ImportNameP7_objectS0_S0_P6_frameE15PyId___import__, @object
	.size	_ZZ16PyJit_ImportNameP7_objectS0_S0_P6_frameE15PyId___import__, 24
_ZZ16PyJit_ImportNameP7_objectS0_S0_P6_frameE15PyId___import__:
	.quad	0
	.quad	.LC46
	.quad	0
	.section	.rodata
.LC47:
	.string	"__name__"
	.data
	.align 16
	.type	_ZZ16PyJit_ImportFromP7_objectS0_E13PyId___name__, @object
	.size	_ZZ16PyJit_ImportFromP7_objectS0_E13PyId___name__, 24
_ZZ16PyJit_ImportFromP7_objectS0_E13PyId___name__:
	.quad	0
	.quad	.LC47
	.quad	0
	.section	.rodata
.LC48:
	.string	"__all__"
	.data
	.align 16
	.type	_ZZL15import_all_fromP7_objectS0_E12PyId___all__, @object
	.size	_ZZL15import_all_fromP7_objectS0_E12PyId___all__, 24
_ZZL15import_all_fromP7_objectS0_E12PyId___all__:
	.quad	0
	.quad	.LC48
	.quad	0
	.section	.rodata
.LC49:
	.string	"__dict__"
	.data
	.align 16
	.type	_ZZL15import_all_fromP7_objectS0_E13PyId___dict__, @object
	.size	_ZZL15import_all_fromP7_objectS0_E13PyId___dict__, 24
_ZZL15import_all_fromP7_objectS0_E13PyId___dict__:
	.quad	0
	.quad	.LC49
	.quad	0
	.local	_ZZ20PyJit_DebugDumpFrameP6_frameE8_dumping
	.comm	_ZZ20PyJit_DebugDumpFrameP6_frameE8_dumping,1,1
	.section	.rodata
	.align 32
	.type	_ZZ20PyJit_LoadClassDerefP6_framemE19__PRETTY_FUNCTION__, @object
	.size	_ZZ20PyJit_LoadClassDerefP6_framemE19__PRETTY_FUNCTION__, 55
_ZZ20PyJit_LoadClassDerefP6_framemE19__PRETTY_FUNCTION__:
	.string	"PyObject* PyJit_LoadClassDeref(PyFrameObject*, size_t)"
	.align 32
	.type	_ZZ16PyJit_ExtendListP7_objectS0_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ16PyJit_ExtendListP7_objectS0_E19__PRETTY_FUNCTION__, 43
_ZZ16PyJit_ExtendListP7_objectS0_E19__PRETTY_FUNCTION__:
	.string	"int PyJit_ExtendList(PyObject*, PyObject*)"
	.align 32
	.type	_ZZ14PyJit_StoreMapP7_objectS0_S0_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ14PyJit_StoreMapP7_objectS0_S0_E19__PRETTY_FUNCTION__, 52
_ZZ14PyJit_StoreMapP7_objectS0_S0_E19__PRETTY_FUNCTION__:
	.string	"int PyJit_StoreMap(PyObject*, PyObject*, PyObject*)"
	.align 32
	.type	_ZZ22PyJit_StoreMapNoDecRefP7_objectS0_S0_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ22PyJit_StoreMapNoDecRefP7_objectS0_S0_E19__PRETTY_FUNCTION__, 60
_ZZ22PyJit_StoreMapNoDecRefP7_objectS0_S0_E19__PRETTY_FUNCTION__:
	.string	"int PyJit_StoreMapNoDecRef(PyObject*, PyObject*, PyObject*)"
	.align 32
	.type	_ZZ16PyJit_DictUpdateP7_objectS0_E19__PRETTY_FUNCTION__, @object
	.size	_ZZ16PyJit_DictUpdateP7_objectS0_E19__PRETTY_FUNCTION__, 43
_ZZ16PyJit_DictUpdateP7_objectS0_E19__PRETTY_FUNCTION__:
	.string	"int PyJit_DictUpdate(PyObject*, PyObject*)"
.LC50:
	.string	"__build_class__"
	.data
	.align 16
	.type	_ZZ16PyJit_BuildClassP6_frameE20PyId___build_class__, @object
	.size	_ZZ16PyJit_BuildClassP6_frameE20PyId___build_class__, 24
_ZZ16PyJit_BuildClassP6_frameE20PyId___build_class__:
	.quad	0
	.quad	.LC50
	.quad	0
	.section	.rodata
	.align 32
	.type	_ZZL13fast_functionP7_objectPS0_iE19__PRETTY_FUNCTION__, @object
	.size	_ZZL13fast_functionP7_objectPS0_iE19__PRETTY_FUNCTION__, 52
_ZZL13fast_functionP7_objectPS0_iE19__PRETTY_FUNCTION__:
	.string	"PyObject* fast_function(PyObject*, PyObject**, int)"
	.align 8
.LC44:
	.long	0
	.long	-1074790400
	.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609"
	.section	.note.GNU-stack,"",@progbits
